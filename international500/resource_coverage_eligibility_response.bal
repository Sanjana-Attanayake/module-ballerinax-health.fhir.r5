// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_COVERAGEELIGIBILITYRESPONSE = "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityResponse";
public const RESOURCE_NAME_COVERAGEELIGIBILITYRESPONSE = "CoverageEligibilityResponse";

# FHIR CoverageEligibilityResponse resource record.
#
# + resourceType - The type of the resource describes
# + insurance - Financial instruments for reimbursement for the health care products and services.
# + request - Reference to the original request resource.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + purpose - Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - A reference from the Insurer to which these services pertain to be used on further communication and as proof that the request occurred.
# + language - The base language in which the resource is written.
# + 'error - Errors encountered during the processing of the request.
# + servicedPeriod - The date or dates when the enclosed suite of services were performed or completed.
# + insurer - The Insurer who issued the coverage in question and is the author of the response.
# + patient - The party who is the beneficiary of the supplied coverage and for whom eligibility is sought.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + event - Information code for an event with a corresponding date or period.
# + outcome - The outcome of the request processing.
# + identifier - A unique identifier assigned to this coverage eligiblity request.
# + created - The date this resource was created.
# + requestor - The provider which is responsible for the request.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + disposition - A human readable description of the status of the adjudication.
# + form - A code for the form to be used for printing the content.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + servicedDate - The date or dates when the enclosed suite of services were performed or completed.
# + status - The status of the resource instance.
@r5:ResourceDefinition {
    resourceType: "CoverageEligibilityResponse",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityResponse",
    elements: {
        "insurance" : {
            name: "insurance",
            dataType: CoverageEligibilityResponseInsurance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CoverageEligibilityResponse.insurance"
        },
        "request" : {
            name: "request",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.request"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CoverageEligibilityResponse.extension"
        },
        "purpose" : {
            name: "purpose",
            dataType: CoverageEligibilityResponsePurpose,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CoverageEligibilityResponse.purpose",
            valueSet: "http://hl7.org/fhir/ValueSet/eligibilityresponse-purpose|5.0.0"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CoverageEligibilityResponse.modifierExtension"
        },
        "preAuthRef" : {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.preAuthRef"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "error" : {
            name: "error",
            dataType: CoverageEligibilityResponseError,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CoverageEligibilityResponse.error"
        },
        "servicedPeriod" : {
            name: "servicedPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.serviced[x]"
        },
        "insurer" : {
            name: "insurer",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.insurer"
        },
        "patient" : {
            name: "patient",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.patient"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.text"
        },
        "event" : {
            name: "event",
            dataType: CoverageEligibilityResponseEvent,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CoverageEligibilityResponse.event"
        },
        "outcome" : {
            name: "outcome",
            dataType: CoverageEligibilityResponseOutcome,
            min: 1,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.outcome",
            valueSet: "http://hl7.org/fhir/ValueSet/eligibility-outcome|5.0.0"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CoverageEligibilityResponse.identifier"
        },
        "created" : {
            name: "created",
            dataType: r5:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.created"
        },
        "requestor" : {
            name: "requestor",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.requestor"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CoverageEligibilityResponse.contained"
        },
        "disposition" : {
            name: "disposition",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.disposition"
        },
        "form" : {
            name: "form",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.form",
            valueSet: "http://hl7.org/fhir/ValueSet/forms"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.implicitRules"
        },
        "servicedDate" : {
            name: "servicedDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.serviced[x]"
        },
        "status" : {
            name: "status",
            dataType: CoverageEligibilityResponseStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "CoverageEligibilityResponse.status",
            valueSet: "http://hl7.org/fhir/ValueSet/fm-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type CoverageEligibilityResponse record {|
    *r5:DomainResource;

    RESOURCE_NAME_COVERAGEELIGIBILITYRESPONSE resourceType = RESOURCE_NAME_COVERAGEELIGIBILITYRESPONSE;

    CoverageEligibilityResponseInsurance[] insurance?;
    r5:Reference request;
    r5:Extension[] extension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.CoverageEligibilityResponse.purpose constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.CoverageEligibilityResponse.purpose constraint. This field must be an array containing at most one item."
        }
    }
    CoverageEligibilityResponsePurpose[] purpose;
    r5:Extension[] modifierExtension?;
    string preAuthRef?;
    r5:code language?;
    CoverageEligibilityResponseError[] 'error?;
    r5:Period servicedPeriod?;
    r5:Reference insurer;
    r5:Reference patient;
    string id?;
    r5:Narrative text?;
    CoverageEligibilityResponseEvent[] event?;
    CoverageEligibilityResponseOutcome outcome;
    r5:Identifier[] identifier?;
    r5:dateTime created;
    r5:Reference requestor?;
    r5:Resource[] contained?;
    string disposition?;
    r5:CodeableConcept form?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    r5:date servicedDate?;
    CoverageEligibilityResponseStatus status;
    r5:Element ...;
|};

# FHIR CoverageEligibilityResponseError datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - An error code,from a specified code system, which details why the eligibility check could not be performed.
# + expression - A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "CoverageEligibilityResponseError",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "CoverageEligibilityResponse.error.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "An error code,from a specified code system, which details why the eligibility check could not be performed.",
            path: "CoverageEligibilityResponse.error.code"
        },
        "expression": {
            name: "expression",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
            path: "CoverageEligibilityResponse.error.expression"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "CoverageEligibilityResponse.error.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "CoverageEligibilityResponse.error.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CoverageEligibilityResponseError record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept code;
    string[] expression?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR CoverageEligibilityResponseEvent datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + whenDateTime - A date or period in the past or future indicating when the event occurred or is expectd to occur.
# + whenPeriod - A date or period in the past or future indicating when the event occurred or is expectd to occur.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded event such as when a service is expected or a card printed.
@r5:DataTypeDefinition {
    name: "CoverageEligibilityResponseEvent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "CoverageEligibilityResponse.event.extension"
        },
        "whenDateTime": {
            name: "whenDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "A date or period in the past or future indicating when the event occurred or is expectd to occur.",
            path: "CoverageEligibilityResponse.event.when[x]"
        },
        "whenPeriod": {
            name: "whenPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "A date or period in the past or future indicating when the event occurred or is expectd to occur.",
            path: "CoverageEligibilityResponse.event.when[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "CoverageEligibilityResponse.event.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "CoverageEligibilityResponse.event.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded event such as when a service is expected or a card printed.",
            path: "CoverageEligibilityResponse.event.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CoverageEligibilityResponseEvent record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:dateTime whenDateTime;
    r5:Period whenPeriod;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR CoverageEligibilityResponseInsuranceItem datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + authorizationSupporting - Codes or comments regarding information or actions associated with the preauthorization.
# + description - A richer description of the benefit or services covered.
# + productOrService - This contains the product, service, drug or other billing code for the item.
# + benefit - Benefits used to date.
# + network - Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.
# + excluded - True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.
# + unit - Indicates if the benefits apply to an individual or to the family.
# + authorizationUrl - A web location for obtaining requirements or descriptive information regarding the preauthorization.
# + authorizationRequired - A boolean flag indicating whether a preauthorization is required prior to actual service delivery.
# + provider - The practitioner who is eligible for the provision of the product or service.
# + name - A short name or tag for the benefit.
# + term - The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - Code to identify the general type of benefits under which products and services are provided.
@r5:DataTypeDefinition {
    name: "CoverageEligibilityResponseInsuranceItem",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "CoverageEligibilityResponse.insurance.item.extension"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "CoverageEligibilityResponse.insurance.item.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "CoverageEligibilityResponse.insurance.item.modifierExtension"
        },
        "authorizationSupporting": {
            name: "authorizationSupporting",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Codes or comments regarding information or actions associated with the preauthorization.",
            path: "CoverageEligibilityResponse.insurance.item.authorizationSupporting"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A richer description of the benefit or services covered.",
            path: "CoverageEligibilityResponse.insurance.item.description"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the product, service, drug or other billing code for the item.",
            path: "CoverageEligibilityResponse.insurance.item.productOrService"
        },
        "benefit": {
            name: "benefit",
            dataType: CoverageEligibilityResponseInsuranceItemBenefit,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Benefits used to date.",
            path: "CoverageEligibilityResponse.insurance.item.benefit"
        },
        "network": {
            name: "network",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
            path: "CoverageEligibilityResponse.insurance.item.network"
        },
        "excluded": {
            name: "excluded",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
            path: "CoverageEligibilityResponse.insurance.item.excluded"
        },
        "unit": {
            name: "unit",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates if the benefits apply to an individual or to the family.",
            path: "CoverageEligibilityResponse.insurance.item.unit"
        },
        "authorizationUrl": {
            name: "authorizationUrl",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "A web location for obtaining requirements or descriptive information regarding the preauthorization.",
            path: "CoverageEligibilityResponse.insurance.item.authorizationUrl"
        },
        "authorizationRequired": {
            name: "authorizationRequired",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "A boolean flag indicating whether a preauthorization is required prior to actual service delivery.",
            path: "CoverageEligibilityResponse.insurance.item.authorizationRequired"
        },
        "provider": {
            name: "provider",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The practitioner who is eligible for the provision of the product or service.",
            path: "CoverageEligibilityResponse.insurance.item.provider"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short name or tag for the benefit.",
            path: "CoverageEligibilityResponse.insurance.item.name"
        },
        "term": {
            name: "term",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.",
            path: "CoverageEligibilityResponse.insurance.item.term"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "CoverageEligibilityResponse.insurance.item.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "CoverageEligibilityResponse.insurance.item.category"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CoverageEligibilityResponseInsuranceItem record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] authorizationSupporting?;
    string description?;
    r5:CodeableConcept productOrService?;
    CoverageEligibilityResponseInsuranceItemBenefit[] benefit?;
    r5:CodeableConcept network?;
    boolean excluded?;
    r5:CodeableConcept unit?;
    r5:uri authorizationUrl?;
    boolean authorizationRequired?;
    r5:Reference provider?;
    string name?;
    r5:CodeableConcept term?;
    string id?;
    r5:CodeableConcept category?;
|};

# FHIR CoverageEligibilityResponseInsuranceItemBenefit datatype record.
#
# + allowedCoverageEligibilityResponseMoney - The quantity of the benefit which is permitted under the coverage.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + usedCoverageEligibilityResponseMoney - The quantity of the benefit which have been consumed to date.
# + usedCoverageEligibilityResponseUnsignedInt - The quantity of the benefit which have been consumed to date.
# + allowedCoverageEligibilityResponseString - The quantity of the benefit which is permitted under the coverage.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + allowedCoverageEligibilityResponseUnsignedInt - The quantity of the benefit which is permitted under the coverage.
# + usedCoverageEligibilityResponseString - The quantity of the benefit which have been consumed to date.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Classification of benefit being provided.
@r5:DataTypeDefinition {
    name: "CoverageEligibilityResponseInsuranceItemBenefit",
    baseType: (),
    elements: {
        "allowedCoverageEligibilityResponseMoney": {
            name: "allowedCoverageEligibilityResponseMoney",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.allowed[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.extension"
        },
        "usedCoverageEligibilityResponseMoney": {
            name: "usedCoverageEligibilityResponseMoney",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.used[x]"
        },
        "usedCoverageEligibilityResponseUnsignedInt": {
            name: "usedCoverageEligibilityResponseUnsignedInt",
            dataType: r5:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.used[x]"
        },
        "allowedCoverageEligibilityResponseString": {
            name: "allowedCoverageEligibilityResponseString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.allowed[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "CoverageEligibilityResponse.insurance.item.benefit.modifierExtension"
        },
        "allowedCoverageEligibilityResponseUnsignedInt": {
            name: "allowedCoverageEligibilityResponseUnsignedInt",
            dataType: r5:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.allowed[x]"
        },
        "usedCoverageEligibilityResponseString": {
            name: "usedCoverageEligibilityResponseString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.used[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Classification of benefit being provided.",
            path: "CoverageEligibilityResponse.insurance.item.benefit.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CoverageEligibilityResponseInsuranceItemBenefit record {|
    *r5:BackboneElement;

    r5:Money allowedCoverageEligibilityResponseMoney?;
    r5:Extension[] extension?;
    r5:Money usedCoverageEligibilityResponseMoney?;
    r5:unsignedInt usedCoverageEligibilityResponseUnsignedInt?;
    string allowedCoverageEligibilityResponseString?;
    r5:Extension[] modifierExtension?;
    r5:unsignedInt allowedCoverageEligibilityResponseUnsignedInt?;
    string usedCoverageEligibilityResponseString?;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR CoverageEligibilityResponseInsurance datatype record.
#
# + benefitPeriod - The term of the benefits documented in this response.
# + coverage - Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + inforce - Flag indicating if the coverage provided is inforce currently if no service date(s) specified or for the whole duration of the service dates.
# + item - Benefits and optionally current balances, and authorization details by category or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "CoverageEligibilityResponseInsurance",
    baseType: (),
    elements: {
        "benefitPeriod": {
            name: "benefitPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The term of the benefits documented in this response.",
            path: "CoverageEligibilityResponse.insurance.benefitPeriod"
        },
        "coverage": {
            name: "coverage",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
            path: "CoverageEligibilityResponse.insurance.coverage"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "CoverageEligibilityResponse.insurance.extension"
        },
        "inforce": {
            name: "inforce",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Flag indicating if the coverage provided is inforce currently if no service date(s) specified or for the whole duration of the service dates.",
            path: "CoverageEligibilityResponse.insurance.inforce"
        },
        "item": {
            name: "item",
            dataType: CoverageEligibilityResponseInsuranceItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Benefits and optionally current balances, and authorization details by category or service.",
            path: "CoverageEligibilityResponse.insurance.item"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "CoverageEligibilityResponse.insurance.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "CoverageEligibilityResponse.insurance.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CoverageEligibilityResponseInsurance record {|
    *r5:BackboneElement;

    r5:Period benefitPeriod?;
    r5:Reference coverage;
    r5:Extension[] extension?;
    boolean inforce?;
    CoverageEligibilityResponseInsuranceItem[] item?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# CoverageEligibilityResponseStatus enum
public enum CoverageEligibilityResponseStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_CANCELLED = "cancelled",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# CoverageEligibilityResponsePurpose enum
public enum CoverageEligibilityResponsePurpose {
   CODE_PURPOSE_BENEFITS = "benefits",
   CODE_PURPOSE_DISCOVERY = "discovery",
   CODE_PURPOSE_AUTH_REQUIREMENTS = "auth-requirements",
   CODE_PURPOSE_VALIDATION = "validation"
}

# CoverageEligibilityResponseOutcome enum
public enum CoverageEligibilityResponseOutcome {
   CODE_OUTCOME_QUEUED = "queued",
   CODE_OUTCOME_COMPLETE = "complete",
   CODE_OUTCOME_ERROR = "error",
   CODE_OUTCOME_PARTIAL = "partial"
}

