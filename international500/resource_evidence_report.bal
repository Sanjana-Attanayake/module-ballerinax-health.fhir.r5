// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_EVIDENCEREPORT = "http://hl7.org/fhir/StructureDefinition/EvidenceReport";
public const RESOURCE_NAME_EVIDENCEREPORT = "EvidenceReport";

# FHIR EvidenceReport resource record.
#
# + resourceType - The type of the resource describes
# + citeAsReference - Citation Resource or display of suggested citation for this report.
# + note - Used for footnotes and annotations.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + relatedIdentifier - A formal identifier that is used to identify things closely related to this EvidenceReport.
# + subject - Specifies the subject or focus of the report. Answers 'What is this report about?'.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + citeAsMarkdown - Citation Resource or display of suggested citation for this report.
# + language - The base language in which the resource is written.
# + section - The root of the sections that make up the composition.
# + 'type - Specifies the kind of report, such as grouping of classifiers, search results, or human-compiled expression.
# + contact - Contact details to assist a user in finding and communicating with the publisher.
# + endorser - An individiual, organization, or device responsible for officially endorsing the content for use in some setting.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + relatesTo - Relationships that this composition has with other compositions or documents that already exist.
# + editor - An individiual, organization, or device primarily responsible for internal coherence of the content.
# + identifier - A formal identifier that is used to identify this EvidenceReport when it is represented in other formats, or referenced in a specification, model, design or an instance.
# + relatedArtifact - Link, description or reference to artifact associated with the report.
# + author - An individiual, organization, or device primarily involved in the creation and maintenance of the content.
# + reviewer - An individiual, organization, or device primarily responsible for review of some aspect of the content.
# + url - An absolute URI that is used to identify this EvidenceReport when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this summary is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the summary is stored on different servers.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + publisher - The name of the organization or individual responsible for the release and ongoing maintenance of the evidence report.
# + useContext - The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence report instances.
# + status - The status of this summary. Enables tracking the life-cycle of the content.
@r5:ResourceDefinition {
    resourceType: "EvidenceReport",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/EvidenceReport",
    elements: {
        "citeAsReference" : {
            name: "citeAsReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.citeAs[x]"
        },
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.note"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.extension"
        },
        "relatedIdentifier" : {
            name: "relatedIdentifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.relatedIdentifier"
        },
        "subject" : {
            name: "subject",
            dataType: EvidenceReportSubject,
            min: 1,
            max: 1,
            isArray: false,
            path: "EvidenceReport.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.modifierExtension"
        },
        "citeAsMarkdown" : {
            name: "citeAsMarkdown",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.citeAs[x]"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "section" : {
            name: "section",
            dataType: EvidenceReportSection,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.section"
        },
        "type" : {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.type",
            valueSet: "http://hl7.org/fhir/ValueSet/evidence-report-type"
        },
        "contact" : {
            name: "contact",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.contact"
        },
        "endorser" : {
            name: "endorser",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.endorser"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.text"
        },
        "relatesTo" : {
            name: "relatesTo",
            dataType: EvidenceReportRelatesTo,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.relatesTo"
        },
        "editor" : {
            name: "editor",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.editor"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.identifier"
        },
        "relatedArtifact" : {
            name: "relatedArtifact",
            dataType: r5:RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.relatedArtifact"
        },
        "author" : {
            name: "author",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.author"
        },
        "reviewer" : {
            name: "reviewer",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.reviewer"
        },
        "url" : {
            name: "url",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.url"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.implicitRules"
        },
        "publisher" : {
            name: "publisher",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "EvidenceReport.publisher"
        },
        "useContext" : {
            name: "useContext",
            dataType: r5:UsageContext,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "EvidenceReport.useContext"
        },
        "status" : {
            name: "status",
            dataType: EvidenceReportStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "EvidenceReport.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type EvidenceReport record {|
    *r5:DomainResource;

    RESOURCE_NAME_EVIDENCEREPORT resourceType = RESOURCE_NAME_EVIDENCEREPORT;

    r5:Reference citeAsReference?;
    r5:Annotation[] note?;
    r5:Extension[] extension?;
    r5:Identifier[] relatedIdentifier?;
    EvidenceReportSubject subject;
    r5:Extension[] modifierExtension?;
    r5:markdown citeAsMarkdown?;
    r5:code language?;
    EvidenceReportSection[] section?;
    r5:CodeableConcept 'type?;
    r5:ContactDetail[] contact?;
    r5:ContactDetail[] endorser?;
    string id?;
    r5:Narrative text?;
    EvidenceReportRelatesTo[] relatesTo?;
    r5:ContactDetail[] editor?;
    r5:Identifier[] identifier?;
    r5:RelatedArtifact[] relatedArtifact?;
    r5:ContactDetail[] author?;
    r5:ContactDetail[] reviewer?;
    r5:uri url?;
    r5:Resource[] contained?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    string publisher?;
    r5:UsageContext[] useContext?;
    EvidenceReportStatus status;
    r5:Element ...;
|};

# EvidenceReportStatus enum
public enum EvidenceReportStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# EvidenceReportRelatesToCode enum
public enum EvidenceReportRelatesToCode {
   CODE_CODE_AMENDS = "amends",
   CODE_CODE_REPLACEDWITH = "replacedWith",
   CODE_CODE_AMENDEDWITH = "amendedWith",
   CODE_CODE_REPLACES = "replaces",
   CODE_CODE_TRANSFORMEDWITH = "transformedWith",
   CODE_CODE_TRANSFORMS = "transforms",
   CODE_CODE_APPENDS = "appends",
   CODE_CODE_APPENDEDWITH = "appendedWith"
}

# FHIR EvidenceReportRelatesTo datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The type of relationship that this composition has with anther composition or document.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + target - The target composition/document of this relationship.
@r5:DataTypeDefinition {
    name: "EvidenceReportRelatesTo",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "EvidenceReport.relatesTo.extension"
        },
        "code": {
            name: "code",
            dataType: EvidenceReportRelatesToCode,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of relationship that this composition has with anther composition or document.",
            path: "EvidenceReport.relatesTo.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "EvidenceReport.relatesTo.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "EvidenceReport.relatesTo.id"
        },
        "target": {
            name: "target",
            dataType: EvidenceReportRelatesToTarget,
            min: 1,
            max: 1,
            isArray: false,
            description: "The target composition/document of this relationship.",
            path: "EvidenceReport.relatesTo.target"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type EvidenceReportRelatesTo record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    EvidenceReportRelatesToCode code;
    r5:Extension[] modifierExtension?;
    string id?;
    EvidenceReportRelatesToTarget target;
|};

# FHIR EvidenceReportSubject datatype record.
#
# + note - Used for general notes and annotations not coded elsewhere.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + characteristic - Characteristic.
@r5:DataTypeDefinition {
    name: "EvidenceReportSubject",
    baseType: (),
    elements: {
        "note": {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Used for general notes and annotations not coded elsewhere.",
            path: "EvidenceReport.subject.note"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "EvidenceReport.subject.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "EvidenceReport.subject.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "EvidenceReport.subject.id"
        },
        "characteristic": {
            name: "characteristic",
            dataType: EvidenceReportSubjectCharacteristic,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Characteristic.",
            path: "EvidenceReport.subject.characteristic"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type EvidenceReportSubject record {|
    *r5:BackboneElement;

    r5:Annotation[] note?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    EvidenceReportSubjectCharacteristic[] characteristic?;
|};

# FHIR EvidenceReportSection datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + focusReference - A definitional Resource identifying the kind of content contained within the section. This should be consistent with the section title.
# + emptyReason - If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason.
# + author - Identifies who is responsible for the information in this section, not necessarily who typed it in.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + entryClassifier - Specifies any type of classification of the evidence report.
# + focus - A code identifying the kind of content contained within the section. This should be consistent with the section title.
# + entryQuantity - Quantity as content.
# + title - The label for this particular section. This will be part of the rendered content for the document, and is often used to build a table of contents.
# + mode - How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.
# + orderedBy - Specifies the order applied to the items in the section entries.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is peferred to contain sufficient detail to make it acceptable for a human to just read the narrative.
# + entryReference - A reference to the actual resource from which the narrative in the section is derived.
@r5:DataTypeDefinition {
    name: "EvidenceReportSection",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "EvidenceReport.section.extension"
        },
        "focusReference": {
            name: "focusReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "A definitional Resource identifying the kind of content contained within the section. This should be consistent with the section title.",
            path: "EvidenceReport.section.focusReference"
        },
        "emptyReason": {
            name: "emptyReason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason.",
            path: "EvidenceReport.section.emptyReason"
        },
        "author": {
            name: "author",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies who is responsible for the information in this section, not necessarily who typed it in.",
            path: "EvidenceReport.section.author"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "EvidenceReport.section.modifierExtension"
        },
        "entryClassifier": {
            name: "entryClassifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Specifies any type of classification of the evidence report.",
            path: "EvidenceReport.section.entryClassifier"
        },
        "focus": {
            name: "focus",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code identifying the kind of content contained within the section. This should be consistent with the section title.",
            path: "EvidenceReport.section.focus"
        },
        "entryQuantity": {
            name: "entryQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Quantity as content.",
            path: "EvidenceReport.section.entryQuantity"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The label for this particular section. This will be part of the rendered content for the document, and is often used to build a table of contents.",
            path: "EvidenceReport.section.title"
        },
        "mode": {
            name: "mode",
            dataType: EvidenceReportSectionMode,
            min: 0,
            max: 1,
            isArray: false,
            description: "How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.",
            path: "EvidenceReport.section.mode"
        },
        "orderedBy": {
            name: "orderedBy",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies the order applied to the items in the section entries.",
            path: "EvidenceReport.section.orderedBy"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "EvidenceReport.section.id"
        },
        "text": {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is peferred to contain sufficient detail to make it acceptable for a human to just read the narrative.",
            path: "EvidenceReport.section.text"
        },
        "entryReference": {
            name: "entryReference",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to the actual resource from which the narrative in the section is derived.",
            path: "EvidenceReport.section.entryReference"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type EvidenceReportSection record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Reference focusReference?;
    r5:CodeableConcept emptyReason?;
    r5:Reference[] author?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] entryClassifier?;
    r5:CodeableConcept focus?;
    r5:Quantity[] entryQuantity?;
    string title?;
    EvidenceReportSectionMode mode?;
    r5:CodeableConcept orderedBy?;
    string id?;
    r5:Narrative text?;
    r5:Reference[] entryReference?;
|};

# FHIR EvidenceReportRelatesToTarget datatype record.
#
# + identifier - Target of the relationship Identifier.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + 'resource - Target of the relationship Resource reference.
# + display - Target of the relationship Display.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + url - Target of the relationship URL.
@r5:DataTypeDefinition {
    name: "EvidenceReportRelatesToTarget",
    baseType: (),
    elements: {
        "identifier": {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Target of the relationship Identifier.",
            path: "EvidenceReport.relatesTo.target.identifier"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "EvidenceReport.relatesTo.target.extension"
        },
        "resource": {
            name: "resource",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Target of the relationship Resource reference.",
            path: "EvidenceReport.relatesTo.target.resource"
        },
        "display": {
            name: "display",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Target of the relationship Display.",
            path: "EvidenceReport.relatesTo.target.display"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "EvidenceReport.relatesTo.target.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "EvidenceReport.relatesTo.target.id"
        },
        "url": {
            name: "url",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Target of the relationship URL.",
            path: "EvidenceReport.relatesTo.target.url"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type EvidenceReportRelatesToTarget record {|
    *r5:BackboneElement;

    r5:Identifier identifier?;
    r5:Extension[] extension?;
    r5:Reference 'resource?;
    r5:markdown display?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:uri url?;
|};

# EvidenceReportSectionMode enum
public enum EvidenceReportSectionMode {
   CODE_MODE_CHANGES = "changes",
   CODE_MODE_WORKING = "working",
   CODE_MODE_SNAPSHOT = "snapshot"
}

# FHIR EvidenceReportSubjectCharacteristic datatype record.
#
# + valueEvidenceReportQuantity - Characteristic value.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Timeframe for the characteristic.
# + code - Characteristic code.
# + valueEvidenceReportCodeableConcept - Characteristic value.
# + valueEvidenceReportReference - Characteristic value.
# + valueEvidenceReportRange - Characteristic value.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + exclude - Is used to express not the characteristic.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + valueEvidenceReportBoolean - Characteristic value.
@r5:DataTypeDefinition {
    name: "EvidenceReportSubjectCharacteristic",
    baseType: (),
    elements: {
        "valueEvidenceReportQuantity": {
            name: "valueEvidenceReportQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Characteristic value.",
            path: "EvidenceReport.subject.characteristic.value[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "EvidenceReport.subject.characteristic.extension"
        },
        "period": {
            name: "period",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Timeframe for the characteristic.",
            path: "EvidenceReport.subject.characteristic.period"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Characteristic code.",
            path: "EvidenceReport.subject.characteristic.code"
        },
        "valueEvidenceReportCodeableConcept": {
            name: "valueEvidenceReportCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Characteristic value.",
            path: "EvidenceReport.subject.characteristic.value[x]"
        },
        "valueEvidenceReportReference": {
            name: "valueEvidenceReportReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Characteristic value.",
            path: "EvidenceReport.subject.characteristic.value[x]"
        },
        "valueEvidenceReportRange": {
            name: "valueEvidenceReportRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Characteristic value.",
            path: "EvidenceReport.subject.characteristic.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "EvidenceReport.subject.characteristic.modifierExtension"
        },
        "exclude": {
            name: "exclude",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Is used to express not the characteristic.",
            path: "EvidenceReport.subject.characteristic.exclude"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "EvidenceReport.subject.characteristic.id"
        },
        "valueEvidenceReportBoolean": {
            name: "valueEvidenceReportBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Characteristic value.",
            path: "EvidenceReport.subject.characteristic.value[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type EvidenceReportSubjectCharacteristic record {|
    *r5:BackboneElement;

    r5:Quantity valueEvidenceReportQuantity;
    r5:Extension[] extension?;
    r5:Period period?;
    r5:CodeableConcept code;
    r5:CodeableConcept valueEvidenceReportCodeableConcept;
    r5:Reference valueEvidenceReportReference;
    r5:Range valueEvidenceReportRange;
    r5:Extension[] modifierExtension?;
    boolean exclude?;
    string id?;
    boolean valueEvidenceReportBoolean;
|};

