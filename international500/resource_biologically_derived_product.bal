// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_BIOLOGICALLYDERIVEDPRODUCT = "http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProduct";
public const RESOURCE_NAME_BIOLOGICALLYDERIVEDPRODUCT = "BiologicallyDerivedProduct";

# FHIR BiologicallyDerivedProduct resource record.
#
# + resourceType - The type of the resource describes
# + identifier - Unique instance identifiers assigned to a biologically derived product. Note: This is a business identifier, not a resource identifier.
# + parent - Parent product (if any) for this biologically-derived product.
# + request - Request to obtain and/or infuse this biologically derived product.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + biologicalSourceEvent - An identifier that supports traceability to the event during which material in this product from one or more biological entities was obtained or pooled.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + storageTempRequirements - The temperature requirements for storage of the biologically-derived product.
# + productStatus - Whether the product is currently available.
# + language - The base language in which the resource is written.
# + collection - How this product was collected.
# + processingFacility - Processing facilities responsible for the labeling and distribution of this biologically derived product.
# + productCategory - Broad category of this product.
# + division - A unique identifier for an aliquot of a product. Used to distinguish individual aliquots of a product carrying the same biologicalSource and productCode identifiers.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + productCode - A codified value that systematically supports characterization and classification of medical products of human origin inclusive of processing conditions such as additives, volumes and handling conditions.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + property - A property that is specific to this BiologicallyDerviedProduct instance.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + expirationDate - Date, and where relevant time, of expiration.
@r5:ResourceDefinition {
    resourceType: "BiologicallyDerivedProduct",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProduct",
    elements: {
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProduct.identifier"
        },
        "parent" : {
            name: "parent",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProduct.parent"
        },
        "request" : {
            name: "request",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProduct.request"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProduct.extension"
        },
        "biologicalSourceEvent" : {
            name: "biologicalSourceEvent",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.biologicalSourceEvent"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProduct.modifierExtension"
        },
        "storageTempRequirements" : {
            name: "storageTempRequirements",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.storageTempRequirements"
        },
        "productStatus" : {
            name: "productStatus",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.productStatus",
            valueSet: "http://hl7.org/fhir/ValueSet/biologicallyderived-product-status"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "collection" : {
            name: "collection",
            dataType: BiologicallyDerivedProductCollection,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.collection"
        },
        "processingFacility" : {
            name: "processingFacility",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProduct.processingFacility"
        },
        "productCategory" : {
            name: "productCategory",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.productCategory",
            valueSet: "http://hl7.org/fhir/ValueSet/product-category"
        },
        "division" : {
            name: "division",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.division"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProduct.contained"
        },
        "productCode" : {
            name: "productCode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.productCode",
            valueSet: "http://hl7.org/fhir/ValueSet/biologicallyderived-productcodes"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.meta"
        },
        "property" : {
            name: "property",
            dataType: BiologicallyDerivedProductProperty,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProduct.property"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.implicitRules"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.text"
        },
        "expirationDate" : {
            name: "expirationDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProduct.expirationDate"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type BiologicallyDerivedProduct record {|
    *r5:DomainResource;

    RESOURCE_NAME_BIOLOGICALLYDERIVEDPRODUCT resourceType = RESOURCE_NAME_BIOLOGICALLYDERIVEDPRODUCT;

    r5:Identifier[] identifier?;
    r5:Reference[] parent?;
    r5:Reference[] request?;
    r5:Extension[] extension?;
    r5:Identifier biologicalSourceEvent?;
    r5:Extension[] modifierExtension?;
    r5:Range storageTempRequirements?;
    r5:Coding productStatus?;
    r5:code language?;
    BiologicallyDerivedProductCollection collection?;
    r5:Reference[] processingFacility?;
    r5:Coding productCategory?;
    string division?;
    r5:Resource[] contained?;
    r5:CodeableConcept productCode?;
    r5:Meta meta?;
    BiologicallyDerivedProductProperty[] property?;
    r5:uri implicitRules?;
    string id?;
    r5:Narrative text?;
    r5:dateTime expirationDate?;
    r5:Element ...;
|};

# FHIR BiologicallyDerivedProductCollection datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + collectedPeriod - Time of product collection.
# + collectedDateTime - Time of product collection.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - The patient or entity, such as a hospital or vendor in the case of a processed/manipulated/manufactured product, providing the product.
# + collector - Healthcare professional who is performing the collection.
@r5:DataTypeDefinition {
    name: "BiologicallyDerivedProductCollection",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "BiologicallyDerivedProduct.collection.extension"
        },
        "collectedPeriod": {
            name: "collectedPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time of product collection.",
            path: "BiologicallyDerivedProduct.collection.collected[x]"
        },
        "collectedDateTime": {
            name: "collectedDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time of product collection.",
            path: "BiologicallyDerivedProduct.collection.collected[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "BiologicallyDerivedProduct.collection.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "BiologicallyDerivedProduct.collection.id"
        },
        "source": {
            name: "source",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The patient or entity, such as a hospital or vendor in the case of a processed/manipulated/manufactured product, providing the product.",
            path: "BiologicallyDerivedProduct.collection.source"
        },
        "collector": {
            name: "collector",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Healthcare professional who is performing the collection.",
            path: "BiologicallyDerivedProduct.collection.collector"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type BiologicallyDerivedProductCollection record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Period collectedPeriod?;
    r5:dateTime collectedDateTime?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:Reference 'source?;
    r5:Reference collector?;
|};

# FHIR BiologicallyDerivedProductProperty datatype record.
#
# + valueBoolean - Property values.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueRange - Property values.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + 'type - Code that specifies the property. It should reference an established coding system.
# + valueCodeableConcept - Property values.
# + valueRatio - Property values.
# + valueAttachment - Property values.
# + valueString - Property values.
# + valuePeriod - Property values.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + valueInteger - Property values.
# + valueQuantity - Property values.
@r5:DataTypeDefinition {
    name: "BiologicallyDerivedProductProperty",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "BiologicallyDerivedProduct.property.extension"
        },
        "valueRange": {
            name: "valueRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "BiologicallyDerivedProduct.property.modifierExtension"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code that specifies the property. It should reference an established coding system.",
            path: "BiologicallyDerivedProduct.property.type"
        },
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        },
        "valueRatio": {
            name: "valueRatio",
            dataType: r5:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r5:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        },
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "BiologicallyDerivedProduct.property.id"
        },
        "valueInteger": {
            name: "valueInteger",
            dataType: r5:integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Property values.",
            path: "BiologicallyDerivedProduct.property.value[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type BiologicallyDerivedProductProperty record {|
    *r5:BackboneElement;

    boolean valueBoolean;
    r5:Extension[] extension?;
    r5:Range valueRange;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept 'type;
    r5:CodeableConcept valueCodeableConcept;
    r5:Ratio valueRatio;
    r5:Attachment valueAttachment;
    string valueString;
    r5:Period valuePeriod;
    string id?;
    r5:integer valueInteger;
    r5:Quantity valueQuantity;
|};

