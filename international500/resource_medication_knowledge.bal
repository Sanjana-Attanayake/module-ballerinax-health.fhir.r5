// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_MEDICATIONKNOWLEDGE = "http://hl7.org/fhir/StructureDefinition/MedicationKnowledge";
public const RESOURCE_NAME_MEDICATIONKNOWLEDGE = "MedicationKnowledge";

# FHIR MedicationKnowledge resource record.
#
# + resourceType - The type of the resource describes
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that specifies this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems.
# + clinicalUseIssue - Potential clinical issue with or between medication(s) (for example, drug-drug interaction, drug-disease contraindication, drug-allergy interaction, etc.).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + regulatory - Regulatory information about a medication.
# + medicineClassification - Categorization of the medication within a formulary or classification system.
# + storageGuideline - Information on how the medication should be stored, for example, refrigeration temperatures and length of stability at a given temperature.
# + associatedMedication - Links to associated medications that could be prescribed, dispensed or administered.
# + language - The base language in which the resource is written.
# + intendedJurisdiction - Lists the jurisdictions that this medication knowledge was written for.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + relatedMedicationKnowledge - Associated or related medications. For example, if the medication is a branded product (e.g. Crestor), this is the Therapeutic Moeity (e.g. Rosuvastatin) or if this is a generic medication (e.g. Rosuvastatin), this would link to a branded product (e.g. Crestor.
# + productType - Category of the medication or product (e.g. branded product, therapeutic moeity, generic product, innovator product, etc.).
# + identifier - Business identifier for this medication.
# + cost - The price of the medication.
# + indicationGuideline - Guidelines or protocols that are applicable for the administration of the medication based on indication.
# + author - The creator or owner of the knowledge or information about the medication.
# + preparationInstruction - The instructions for preparing the medication.
# + packaging - Information that only applies to packages (not products).
# + monitoringProgram - The program under which the medication is reviewed.
# + definitional - Along with the link to a Medicinal Product Definition resource, this information provides common definitional elements that are needed to understand the specific medication that is being described.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + monograph - Associated documentation about the medication.
# + name - All of the names for a medication, for example, the name(s) given to a medication in different countries. For example, acetaminophen and paracetamol or salbutamol and albuterol.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + status - A code to indicate if the medication referred to by this MedicationKnowledge is in active use within the drug database or inventory system. The status refers to the validity about the information of the medication and not to its medicinal properties.
@r5:ResourceDefinition {
    resourceType: "MedicationKnowledge",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/MedicationKnowledge",
    elements: {
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.extension"
        },
        "code" : {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.code",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-codes"
        },
        "clinicalUseIssue" : {
            name: "clinicalUseIssue",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.clinicalUseIssue"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.modifierExtension"
        },
        "regulatory" : {
            name: "regulatory",
            dataType: MedicationKnowledgeRegulatory,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.regulatory"
        },
        "medicineClassification" : {
            name: "medicineClassification",
            dataType: MedicationKnowledgeMedicineClassification,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.medicineClassification"
        },
        "storageGuideline" : {
            name: "storageGuideline",
            dataType: MedicationKnowledgeStorageGuideline,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.storageGuideline"
        },
        "associatedMedication" : {
            name: "associatedMedication",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.associatedMedication"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "intendedJurisdiction" : {
            name: "intendedJurisdiction",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.intendedJurisdiction"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.text"
        },
        "relatedMedicationKnowledge" : {
            name: "relatedMedicationKnowledge",
            dataType: MedicationKnowledgeRelatedMedicationKnowledge,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.relatedMedicationKnowledge"
        },
        "productType" : {
            name: "productType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.productType"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.identifier"
        },
        "cost" : {
            name: "cost",
            dataType: MedicationKnowledgeCost,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.cost"
        },
        "indicationGuideline" : {
            name: "indicationGuideline",
            dataType: MedicationKnowledgeIndicationGuideline,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.indicationGuideline"
        },
        "author" : {
            name: "author",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.author"
        },
        "preparationInstruction" : {
            name: "preparationInstruction",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.preparationInstruction"
        },
        "packaging" : {
            name: "packaging",
            dataType: MedicationKnowledgePackaging,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.packaging"
        },
        "monitoringProgram" : {
            name: "monitoringProgram",
            dataType: MedicationKnowledgeMonitoringProgram,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.monitoringProgram"
        },
        "definitional" : {
            name: "definitional",
            dataType: MedicationKnowledgeDefinitional,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.definitional"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.meta"
        },
        "monograph" : {
            name: "monograph",
            dataType: MedicationKnowledgeMonograph,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.monograph"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.implicitRules"
        },
        "status" : {
            name: "status",
            dataType: MedicationKnowledgeStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.status",
            valueSet: "http://hl7.org/fhir/ValueSet/medicationknowledge-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type MedicationKnowledge record {|
    *r5:DomainResource;

    RESOURCE_NAME_MEDICATIONKNOWLEDGE resourceType = RESOURCE_NAME_MEDICATIONKNOWLEDGE;

    r5:Extension[] extension?;
    r5:CodeableConcept code?;
    r5:Reference[] clinicalUseIssue?;
    r5:Extension[] modifierExtension?;
    MedicationKnowledgeRegulatory[] regulatory?;
    MedicationKnowledgeMedicineClassification[] medicineClassification?;
    MedicationKnowledgeStorageGuideline[] storageGuideline?;
    r5:Reference[] associatedMedication?;
    r5:code language?;
    r5:CodeableConcept[] intendedJurisdiction?;
    string id?;
    r5:Narrative text?;
    MedicationKnowledgeRelatedMedicationKnowledge[] relatedMedicationKnowledge?;
    r5:CodeableConcept[] productType?;
    r5:Identifier[] identifier?;
    MedicationKnowledgeCost[] cost?;
    MedicationKnowledgeIndicationGuideline[] indicationGuideline?;
    r5:Reference author?;
    r5:markdown preparationInstruction?;
    MedicationKnowledgePackaging[] packaging?;
    MedicationKnowledgeMonitoringProgram[] monitoringProgram?;
    MedicationKnowledgeDefinitional definitional?;
    r5:Resource[] contained?;
    r5:Meta meta?;
    MedicationKnowledgeMonograph[] monograph?;
    string[] name?;
    r5:uri implicitRules?;
    MedicationKnowledgeStatus status?;
    r5:Element ...;
|};

# FHIR MedicationKnowledgeIndicationGuidelineDosingGuidelinePatientCharacteristic datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueMedicationKnowledgeRange - The specific characteristic (e.g. height, weight, gender, etc.).
# + valueMedicationKnowledgeQuantity - The specific characteristic (e.g. height, weight, gender, etc.).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The categorization of the specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).
# + valueMedicationKnowledgeCodeableConcept - The specific characteristic (e.g. height, weight, gender, etc.).
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeIndicationGuidelineDosingGuidelinePatientCharacteristic",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic.extension"
        },
        "valueMedicationKnowledgeRange": {
            name: "valueMedicationKnowledgeRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "The specific characteristic (e.g. height, weight, gender, etc.).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic.value[x]"
        },
        "valueMedicationKnowledgeQuantity": {
            name: "valueMedicationKnowledgeQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The specific characteristic (e.g. height, weight, gender, etc.).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The categorization of the specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic.type"
        },
        "valueMedicationKnowledgeCodeableConcept": {
            name: "valueMedicationKnowledgeCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The specific characteristic (e.g. height, weight, gender, etc.).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic.value[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeIndicationGuidelineDosingGuidelinePatientCharacteristic record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Range valueMedicationKnowledgeRange?;
    r5:Quantity valueMedicationKnowledgeQuantity?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
    r5:CodeableConcept valueMedicationKnowledgeCodeableConcept?;
|};

# FHIR MedicationKnowledgeIndicationGuidelineDosingGuideline datatype record.
#
# + administrationTreatment - The type of the treatment that the guideline applies to, for example, long term therapy, first line treatment, etc.
# + dosage - Dosage for the medication for the specific guidelines.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + patientCharacteristic - Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).
# + treatmentIntent - The overall intention of the treatment, for example, prophylactic, supporative, curative, etc.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeIndicationGuidelineDosingGuideline",
    baseType: (),
    elements: {
        "administrationTreatment": {
            name: "administrationTreatment",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of the treatment that the guideline applies to, for example, long term therapy, first line treatment, etc.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.administrationTreatment"
        },
        "dosage": {
            name: "dosage",
            dataType: MedicationKnowledgeIndicationGuidelineDosingGuidelineDosage,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Dosage for the medication for the specific guidelines.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.dosage"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.extension"
        },
        "patientCharacteristic": {
            name: "patientCharacteristic",
            dataType: MedicationKnowledgeIndicationGuidelineDosingGuidelinePatientCharacteristic,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.patientCharacteristic"
        },
        "treatmentIntent": {
            name: "treatmentIntent",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The overall intention of the treatment, for example, prophylactic, supporative, curative, etc.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.treatmentIntent"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeIndicationGuidelineDosingGuideline record {|
    *r5:BackboneElement;

    r5:CodeableConcept administrationTreatment?;
    MedicationKnowledgeIndicationGuidelineDosingGuidelineDosage[] dosage?;
    r5:Extension[] extension?;
    MedicationKnowledgeIndicationGuidelineDosingGuidelinePatientCharacteristic[] patientCharacteristic?;
    r5:CodeableConcept treatmentIntent?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR MedicationKnowledgeRegulatoryMaxDispense datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - The period that applies to the maximum number of units.
# + quantity - The maximum number of units of the medication that can be dispensed.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeRegulatoryMaxDispense",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.regulatory.maxDispense.extension"
        },
        "period": {
            name: "period",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "The period that applies to the maximum number of units.",
            path: "MedicationKnowledge.regulatory.maxDispense.period"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "The maximum number of units of the medication that can be dispensed.",
            path: "MedicationKnowledge.regulatory.maxDispense.quantity"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.regulatory.maxDispense.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.regulatory.maxDispense.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRegulatoryMaxDispense record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Duration period?;
    r5:Quantity quantity;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR MedicationKnowledgeMonograph datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - Associated documentation about the medication.
# + 'type - The category of documentation about the medication. (e.g. professional monograph, patient education monograph).
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeMonograph",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.monograph.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.monograph.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.monograph.id"
        },
        "source": {
            name: "source",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Associated documentation about the medication.",
            path: "MedicationKnowledge.monograph.source"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The category of documentation about the medication. (e.g. professional monograph, patient education monograph).",
            path: "MedicationKnowledge.monograph.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeMonograph record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:Reference 'source?;
    r5:CodeableConcept 'type?;
|};

# FHIR MedicationKnowledgeDefinitional datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + intendedRoute - The intended or approved route of administration.
# + ingredient - Identifies a particular constituent of interest in the product.
# + drugCharacteristic - Specifies descriptive properties of the medicine, such as color, shape, imprints, etc.
# + doseForm - Describes the form of the item. Powder; tablets; capsule.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + definition - Associated definitions for this medication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeDefinitional",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.definitional.extension"
        },
        "intendedRoute": {
            name: "intendedRoute",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The intended or approved route of administration.",
            path: "MedicationKnowledge.definitional.intendedRoute"
        },
        "ingredient": {
            name: "ingredient",
            dataType: MedicationKnowledgeDefinitionalIngredient,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies a particular constituent of interest in the product.",
            path: "MedicationKnowledge.definitional.ingredient"
        },
        "drugCharacteristic": {
            name: "drugCharacteristic",
            dataType: MedicationKnowledgeDefinitionalDrugCharacteristic,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Specifies descriptive properties of the medicine, such as color, shape, imprints, etc.",
            path: "MedicationKnowledge.definitional.drugCharacteristic"
        },
        "doseForm": {
            name: "doseForm",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Describes the form of the item. Powder; tablets; capsule.",
            path: "MedicationKnowledge.definitional.doseForm"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.definitional.modifierExtension"
        },
        "definition": {
            name: "definition",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Associated definitions for this medication.",
            path: "MedicationKnowledge.definitional.definition"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.definitional.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeDefinitional record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept[] intendedRoute?;
    MedicationKnowledgeDefinitionalIngredient[] ingredient?;
    MedicationKnowledgeDefinitionalDrugCharacteristic[] drugCharacteristic?;
    r5:CodeableConcept doseForm?;
    r5:Extension[] modifierExtension?;
    r5:Reference[] definition?;
    string id?;
|};

# FHIR MedicationKnowledgeDefinitionalDrugCharacteristic datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueMedicationKnowledgeString - Description of the characteristic.
# + valueMedicationKnowledgeQuantity - Description of the characteristic.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueMedicationKnowledgeBase64Binary - Description of the characteristic.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint).
# + valueMedicationKnowledgeCodeableConcept - Description of the characteristic.
# + valueMedicationKnowledgeAttachment - Description of the characteristic.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeDefinitionalDrugCharacteristic",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.definitional.drugCharacteristic.extension"
        },
        "valueMedicationKnowledgeString": {
            name: "valueMedicationKnowledgeString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.definitional.drugCharacteristic.value[x]"
        },
        "valueMedicationKnowledgeQuantity": {
            name: "valueMedicationKnowledgeQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.definitional.drugCharacteristic.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.definitional.drugCharacteristic.modifierExtension"
        },
        "valueMedicationKnowledgeBase64Binary": {
            name: "valueMedicationKnowledgeBase64Binary",
            dataType: r5:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.definitional.drugCharacteristic.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.definitional.drugCharacteristic.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint).",
            path: "MedicationKnowledge.definitional.drugCharacteristic.type"
        },
        "valueMedicationKnowledgeCodeableConcept": {
            name: "valueMedicationKnowledgeCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.definitional.drugCharacteristic.value[x]"
        },
        "valueMedicationKnowledgeAttachment": {
            name: "valueMedicationKnowledgeAttachment",
            dataType: r5:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.definitional.drugCharacteristic.value[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeDefinitionalDrugCharacteristic record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    string valueMedicationKnowledgeString?;
    r5:Quantity valueMedicationKnowledgeQuantity?;
    r5:Extension[] modifierExtension?;
    r5:base64Binary valueMedicationKnowledgeBase64Binary?;
    string id?;
    r5:CodeableConcept 'type?;
    r5:CodeableConcept valueMedicationKnowledgeCodeableConcept?;
    r5:Attachment valueMedicationKnowledgeAttachment?;
|};

# FHIR MedicationKnowledgeMedicineClassification datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + sourceUri - Either a textual source of the classification or a reference to an online source.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + sourceString - Either a textual source of the classification or a reference to an online source.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + classification - Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.).
# + 'type - The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification).
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeMedicineClassification",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.medicineClassification.extension"
        },
        "sourceUri": {
            name: "sourceUri",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Either a textual source of the classification or a reference to an online source.",
            path: "MedicationKnowledge.medicineClassification.source[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.medicineClassification.modifierExtension"
        },
        "sourceString": {
            name: "sourceString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Either a textual source of the classification or a reference to an online source.",
            path: "MedicationKnowledge.medicineClassification.source[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.medicineClassification.id"
        },
        "classification": {
            name: "classification",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.).",
            path: "MedicationKnowledge.medicineClassification.classification"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification).",
            path: "MedicationKnowledge.medicineClassification.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeMedicineClassification record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:uri sourceUri?;
    r5:Extension[] modifierExtension?;
    string sourceString?;
    string id?;
    r5:CodeableConcept[] classification?;
    r5:CodeableConcept 'type;
|};

# FHIR MedicationKnowledgeIndicationGuidelineDosingGuidelineDosage datatype record.
#
# + dosage - Dosage for the medication for the specific guidelines.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type or category of dosage for a given medication (for example, prophylaxis, maintenance, therapeutic, etc.).
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeIndicationGuidelineDosingGuidelineDosage",
    baseType: (),
    elements: {
        "dosage": {
            name: "dosage",
            dataType: r5:Dosage,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Dosage for the medication for the specific guidelines.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.dosage.dosage"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.dosage.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.dosage.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.dosage.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type or category of dosage for a given medication (for example, prophylaxis, maintenance, therapeutic, etc.).",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline.dosage.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeIndicationGuidelineDosingGuidelineDosage record {|
    *r5:BackboneElement;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.MedicationKnowledge.indicationGuideline.dosingGuideline.dosage.dosage constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.MedicationKnowledge.indicationGuideline.dosingGuideline.dosage.dosage constraint. This field must be an array containing at most one item."
        }
    }
    r5:Dosage[] dosage;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR MedicationKnowledgeCost datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + costMoney - The price or representation of the cost (for example, Band A, Band B or $, $$) of the medication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - The source or owner that assigns the price to the medication.
# + 'type - The category of the cost information. For example, manufacturers' cost, patient cost, claim reimbursement cost, actual acquisition cost.
# + costCodeableConcept - The price or representation of the cost (for example, Band A, Band B or $, $$) of the medication.
# + effectiveDate - The date range for which the cost information of the medication is effective.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeCost",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.cost.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.cost.modifierExtension"
        },
        "costMoney": {
            name: "costMoney",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The price or representation of the cost (for example, Band A, Band B or $, $$) of the medication.",
            path: "MedicationKnowledge.cost.cost[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.cost.id"
        },
        "source": {
            name: "source",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The source or owner that assigns the price to the medication.",
            path: "MedicationKnowledge.cost.source"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The category of the cost information. For example, manufacturers' cost, patient cost, claim reimbursement cost, actual acquisition cost.",
            path: "MedicationKnowledge.cost.type"
        },
        "costCodeableConcept": {
            name: "costCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The price or representation of the cost (for example, Band A, Band B or $, $$) of the medication.",
            path: "MedicationKnowledge.cost.cost[x]"
        },
        "effectiveDate": {
            name: "effectiveDate",
            dataType: r5:Period,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The date range for which the cost information of the medication is effective.",
            path: "MedicationKnowledge.cost.effectiveDate"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeCost record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Money costMoney;
    string id?;
    string 'source?;
    r5:CodeableConcept 'type;
    r5:CodeableConcept costCodeableConcept;
    r5:Period[] effectiveDate?;
|};

# FHIR MedicationKnowledgeMonitoringProgram datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - Name of the reviewing program.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Type of program under which the medication is monitored.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeMonitoringProgram",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.monitoringProgram.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.monitoringProgram.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Name of the reviewing program.",
            path: "MedicationKnowledge.monitoringProgram.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.monitoringProgram.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Type of program under which the medication is monitored.",
            path: "MedicationKnowledge.monitoringProgram.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeMonitoringProgram record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string name?;
    string id?;
    r5:CodeableConcept 'type?;
|};

# FHIR MedicationKnowledgeRegulatory datatype record.
#
# + schedule - Specifies the schedule of a medication in jurisdiction.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + substitution - Specifies if changes are allowed when dispensing a medication from a regulatory perspective.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + maxDispense - The maximum number of units of the medication that can be dispensed in a period.
# + regulatoryAuthority - The authority that is specifying the regulations.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeRegulatory",
    baseType: (),
    elements: {
        "schedule": {
            name: "schedule",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Specifies the schedule of a medication in jurisdiction.",
            path: "MedicationKnowledge.regulatory.schedule"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.regulatory.extension"
        },
        "substitution": {
            name: "substitution",
            dataType: MedicationKnowledgeRegulatorySubstitution,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Specifies if changes are allowed when dispensing a medication from a regulatory perspective.",
            path: "MedicationKnowledge.regulatory.substitution"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.regulatory.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.regulatory.id"
        },
        "maxDispense": {
            name: "maxDispense",
            dataType: MedicationKnowledgeRegulatoryMaxDispense,
            min: 0,
            max: 1,
            isArray: false,
            description: "The maximum number of units of the medication that can be dispensed in a period.",
            path: "MedicationKnowledge.regulatory.maxDispense"
        },
        "regulatoryAuthority": {
            name: "regulatoryAuthority",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The authority that is specifying the regulations.",
            path: "MedicationKnowledge.regulatory.regulatoryAuthority"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRegulatory record {|
    *r5:BackboneElement;

    r5:CodeableConcept[] schedule?;
    r5:Extension[] extension?;
    MedicationKnowledgeRegulatorySubstitution[] substitution?;
    r5:Extension[] modifierExtension?;
    string id?;
    MedicationKnowledgeRegulatoryMaxDispense maxDispense?;
    r5:Reference regulatoryAuthority;
|};

# FHIR MedicationKnowledgeStorageGuideline datatype record.
#
# + reference - Reference to additional information about the storage guidelines.
# + note - Additional notes about the storage.
# + stabilityDuration - Duration that the medication remains stable if the environmentalSetting is respected.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + environmentalSetting - Describes a setting/value on the environment for the adequate storage of the medication and other substances. Environment settings may involve temperature, humidity, or exposure to light.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeStorageGuideline",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to additional information about the storage guidelines.",
            path: "MedicationKnowledge.storageGuideline.reference"
        },
        "note": {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Additional notes about the storage.",
            path: "MedicationKnowledge.storageGuideline.note"
        },
        "stabilityDuration": {
            name: "stabilityDuration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "Duration that the medication remains stable if the environmentalSetting is respected.",
            path: "MedicationKnowledge.storageGuideline.stabilityDuration"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.storageGuideline.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.storageGuideline.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.storageGuideline.id"
        },
        "environmentalSetting": {
            name: "environmentalSetting",
            dataType: MedicationKnowledgeStorageGuidelineEnvironmentalSetting,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Describes a setting/value on the environment for the adequate storage of the medication and other substances. Environment settings may involve temperature, humidity, or exposure to light.",
            path: "MedicationKnowledge.storageGuideline.environmentalSetting"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeStorageGuideline record {|
    *r5:BackboneElement;

    r5:uri reference?;
    r5:Annotation[] note?;
    r5:Duration stabilityDuration?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    MedicationKnowledgeStorageGuidelineEnvironmentalSetting[] environmentalSetting?;
|};

# FHIR MedicationKnowledgePackaging datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + packagedProduct - A reference to a PackagedProductDefinition that provides the details of the product that is in the packaging and is being priced.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgePackaging",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.packaging.extension"
        },
        "packagedProduct": {
            name: "packagedProduct",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a PackagedProductDefinition that provides the details of the product that is in the packaging and is being priced.",
            path: "MedicationKnowledge.packaging.packagedProduct"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.packaging.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.packaging.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgePackaging record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Reference packagedProduct?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR MedicationKnowledgeRegulatorySubstitution datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + allowed - Specifies if regulation allows for changes in the medication when dispensing.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Specifies the type of substitution allowed.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeRegulatorySubstitution",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.regulatory.substitution.extension"
        },
        "allowed": {
            name: "allowed",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Specifies if regulation allows for changes in the medication when dispensing.",
            path: "MedicationKnowledge.regulatory.substitution.allowed"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.regulatory.substitution.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.regulatory.substitution.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Specifies the type of substitution allowed.",
            path: "MedicationKnowledge.regulatory.substitution.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRegulatorySubstitution record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    boolean allowed;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR MedicationKnowledgeStorageGuidelineEnvironmentalSetting datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueMedicationKnowledgeRange - Value associated to the setting. E.g., 40° – 50°F for temperature.
# + valueMedicationKnowledgeQuantity - Value associated to the setting. E.g., 40° – 50°F for temperature.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Identifies the category or type of setting (e.g., type of location, temperature, humidity).
# + valueMedicationKnowledgeCodeableConcept - Value associated to the setting. E.g., 40° – 50°F for temperature.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeStorageGuidelineEnvironmentalSetting",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.storageGuideline.environmentalSetting.extension"
        },
        "valueMedicationKnowledgeRange": {
            name: "valueMedicationKnowledgeRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value associated to the setting. E.g., 40° – 50°F for temperature.",
            path: "MedicationKnowledge.storageGuideline.environmentalSetting.value[x]"
        },
        "valueMedicationKnowledgeQuantity": {
            name: "valueMedicationKnowledgeQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value associated to the setting. E.g., 40° – 50°F for temperature.",
            path: "MedicationKnowledge.storageGuideline.environmentalSetting.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.storageGuideline.environmentalSetting.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.storageGuideline.environmentalSetting.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Identifies the category or type of setting (e.g., type of location, temperature, humidity).",
            path: "MedicationKnowledge.storageGuideline.environmentalSetting.type"
        },
        "valueMedicationKnowledgeCodeableConcept": {
            name: "valueMedicationKnowledgeCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value associated to the setting. E.g., 40° – 50°F for temperature.",
            path: "MedicationKnowledge.storageGuideline.environmentalSetting.value[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeStorageGuidelineEnvironmentalSetting record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Range valueMedicationKnowledgeRange;
    r5:Quantity valueMedicationKnowledgeQuantity;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
    r5:CodeableConcept valueMedicationKnowledgeCodeableConcept;
|};

# FHIR MedicationKnowledgeDefinitionalIngredient datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + item - A reference to the resource that provides information about the ingredient.
# + strengthMedicationKnowledgeCodeableConcept - Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.
# + strengthMedicationKnowledgeRatio - Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + strengthMedicationKnowledgeQuantity - Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.
# + 'type - Indication of whether this ingredient affects the therapeutic action of the drug.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeDefinitionalIngredient",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.definitional.ingredient.extension"
        },
        "item": {
            name: "item",
            dataType: r5:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "A reference to the resource that provides information about the ingredient.",
            path: "MedicationKnowledge.definitional.ingredient.item"
        },
        "strengthMedicationKnowledgeCodeableConcept": {
            name: "strengthMedicationKnowledgeCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
            path: "MedicationKnowledge.definitional.ingredient.strength[x]"
        },
        "strengthMedicationKnowledgeRatio": {
            name: "strengthMedicationKnowledgeRatio",
            dataType: r5:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
            path: "MedicationKnowledge.definitional.ingredient.strength[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.definitional.ingredient.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.definitional.ingredient.id"
        },
        "strengthMedicationKnowledgeQuantity": {
            name: "strengthMedicationKnowledgeQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet but can also be expressed a quantity when the denominator is assumed to be 1 tablet.",
            path: "MedicationKnowledge.definitional.ingredient.strength[x]"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication of whether this ingredient affects the therapeutic action of the drug.",
            path: "MedicationKnowledge.definitional.ingredient.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeDefinitionalIngredient record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableReference item;
    r5:CodeableConcept strengthMedicationKnowledgeCodeableConcept?;
    r5:Ratio strengthMedicationKnowledgeRatio?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:Quantity strengthMedicationKnowledgeQuantity?;
    r5:CodeableConcept 'type?;
|};

# FHIR MedicationKnowledgeRelatedMedicationKnowledge datatype record.
#
# + reference - Associated documentation about the associated medication knowledge.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The category of the associated medication knowledge reference.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeRelatedMedicationKnowledge",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: r5:Reference,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Associated documentation about the associated medication knowledge.",
            path: "MedicationKnowledge.relatedMedicationKnowledge.reference"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.relatedMedicationKnowledge.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.relatedMedicationKnowledge.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.relatedMedicationKnowledge.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The category of the associated medication knowledge reference.",
            path: "MedicationKnowledge.relatedMedicationKnowledge.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRelatedMedicationKnowledge record {|
    *r5:BackboneElement;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.MedicationKnowledge.relatedMedicationKnowledge.reference constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.MedicationKnowledge.relatedMedicationKnowledge.reference constraint. This field must be an array containing at most one item."
        }
    }
    r5:Reference[] reference;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR MedicationKnowledgeIndicationGuideline datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + dosingGuideline - The guidelines for the dosage of the medication for the indication.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + indication - Indication or reason for use of the medication that applies to the specific administration guideline.
@r5:DataTypeDefinition {
    name: "MedicationKnowledgeIndicationGuideline",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.indicationGuideline.extension"
        },
        "dosingGuideline": {
            name: "dosingGuideline",
            dataType: MedicationKnowledgeIndicationGuidelineDosingGuideline,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The guidelines for the dosage of the medication for the indication.",
            path: "MedicationKnowledge.indicationGuideline.dosingGuideline"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.indicationGuideline.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.indicationGuideline.id"
        },
        "indication": {
            name: "indication",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Indication or reason for use of the medication that applies to the specific administration guideline.",
            path: "MedicationKnowledge.indicationGuideline.indication"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeIndicationGuideline record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    MedicationKnowledgeIndicationGuidelineDosingGuideline[] dosingGuideline?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableReference[] indication?;
|};

# MedicationKnowledgeStatus enum
public enum MedicationKnowledgeStatus {
   CODE_STATUS_INACTIVE = "inactive",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

