// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_EXPLANATIONOFBENEFIT = "http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit";
public const RESOURCE_NAME_EXPLANATIONOFBENEFIT = "ExplanationOfBenefit";

# FHIR ExplanationOfBenefit resource record.
#
# + resourceType - The type of the resource describes
# + benefitPeriod - The term of the benefits documented in this response.
# + insurance - Financial instruments for reimbursement for the health care products and services specified on the claim.
# + claimResponse - The business identifier for the instance of the adjudication response: claim, predetermination or preauthorization response.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + use - A code to indicate whether the nature of the request is: Claim - A request to an Insurer to adjudicate the supplied charges for health care goods and services under the identified policy and to pay the determined Benefit amount, if any; Preauthorization - A request to an Insurer to adjudicate the supplied proposed future charges for health care goods and services under the identified policy and to approve the services and provide the expected benefit amounts and potentially to reserve funds to pay the benefits when Claims for the indicated services are later submitted; or, Pre-determination - A request to an Insurer to adjudicate the supplied 'what if' charges for health care goods and services under the identified policy and report back what the Benefit payable would be had the services actually been provided.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference from the Insurer which is used in later communications which refers to this adjudication.
# + language - The base language in which the resource is written.
# + diagnosisRelatedGroup - A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.
# + 'type - The category of claim, e.g. oral, pharmacy, vision, institutional, professional.
# + precedence - This indicates the relative order of a series of EOBs related to different coverages for the same suite of services.
# + processNote - A note that describes or explains adjudication results in a human readable form.
# + payee - The party to be reimbursed for cost of the products and services according to the terms of the policy.
# + supportingInfo - Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.
# + claim - The business identifier for the instance of the adjudication request: claim predetermination or preauthorization.
# + enterer - Individual who created the claim, predetermination or preauthorization.
# + payment - Payment details for the adjudication of the claim.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + careTeam - The members of the team who provided the products and services.
# + identifier - A unique identifier assigned to this explanation of benefit.
# + item - A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.
# + patientPaid - The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.
# + created - The date this resource was created.
# + diagnosis - Information about diagnoses relevant to the claim items.
# + priority - The provider-required urgency of processing the request. Typical values include: stat, normal deferred.
# + preAuthRefPeriod - The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + billablePeriod - The period for which charges are being submitted.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + subType - A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.
# + status - The status of the resource instance.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + benefitBalance - Balance by Benefit Category.
# + accident - Details of a accident which resulted in injuries which required the products and services listed in the claim.
# + addItem - The first-tier service adjudications for payor added product or service lines.
# + total - Categorized monetary totals for the adjudication.
# + related - Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.
# + fundsReserve - A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.
# + fundsReserveRequested - A code to indicate whether and for whom funds are to be reserved for future claims.
# + provider - The provider which is responsible for the claim, predetermination or preauthorization.
# + insurer - The party responsible for authorization, adjudication and reimbursement.
# + patient - The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for forecast reimbursement is sought.
# + event - Information code for an event with a corresponding date or period.
# + outcome - The outcome of the claim, predetermination, or preauthorization processing.
# + decision - The result of the claim, predetermination, or preauthorization adjudication.
# + formCode - A code for the form to be used for printing the content.
# + encounter - Healthcare encounters related to this claim.
# + originalPrescription - Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products.
# + procedure - Procedures performed on the patient relevant to the billing items with the claim.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + disposition - A human readable description of the status of the adjudication.
# + referral - The referral information received by the claim author, it is not to be used when the author generates a referral for a patient. A copy of that referral may be provided as supporting information. Some insurers require proof of referral to pay for services or to pay specialist rates for services.
# + form - The actual form, by reference or inclusion, for printing the content or an EOB.
# + prescription - Prescription is the document/authorization given to the claim author for them to provide products and services for which consideration (reimbursement) is sought. Could be a RX for medications, an 'order' for oxygen or wheelchair or physiotherapy treatments.
# + facility - Facility where the services were provided.
@r5:ResourceDefinition {
    resourceType: "ExplanationOfBenefit",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit",
    elements: {
        "benefitPeriod" : {
            name: "benefitPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.benefitPeriod"
        },
        "insurance" : {
            name: "insurance",
            dataType: ExplanationOfBenefitInsurance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.insurance"
        },
        "claimResponse" : {
            name: "claimResponse",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.claimResponse"
        },
        "traceNumber" : {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.traceNumber"
        },
        "use" : {
            name: "use",
            dataType: ExplanationOfBenefitUse,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.use",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-use|5.0.0"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.modifierExtension"
        },
        "preAuthRef" : {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.preAuthRef"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "diagnosisRelatedGroup" : {
            name: "diagnosisRelatedGroup",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.diagnosisRelatedGroup",
            valueSet: "http://hl7.org/fhir/ValueSet/ex-diagnosisrelatedgroup"
        },
        "type" : {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.type",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-type"
        },
        "precedence" : {
            name: "precedence",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.precedence"
        },
        "processNote" : {
            name: "processNote",
            dataType: ExplanationOfBenefitProcessNote,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.processNote"
        },
        "payee" : {
            name: "payee",
            dataType: ExplanationOfBenefitPayee,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.payee"
        },
        "supportingInfo" : {
            name: "supportingInfo",
            dataType: ExplanationOfBenefitSupportingInfo,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.supportingInfo"
        },
        "claim" : {
            name: "claim",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.claim"
        },
        "enterer" : {
            name: "enterer",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.enterer"
        },
        "payment" : {
            name: "payment",
            dataType: ExplanationOfBenefitPayment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.payment"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.text"
        },
        "careTeam" : {
            name: "careTeam",
            dataType: ExplanationOfBenefitCareTeam,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.careTeam"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.identifier"
        },
        "item" : {
            name: "item",
            dataType: ExplanationOfBenefitItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.item"
        },
        "patientPaid" : {
            name: "patientPaid",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.patientPaid"
        },
        "created" : {
            name: "created",
            dataType: r5:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.created"
        },
        "diagnosis" : {
            name: "diagnosis",
            dataType: ExplanationOfBenefitDiagnosis,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.diagnosis"
        },
        "priority" : {
            name: "priority",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/process-priority"
        },
        "preAuthRefPeriod" : {
            name: "preAuthRefPeriod",
            dataType: r5:Period,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.preAuthRefPeriod"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.meta"
        },
        "billablePeriod" : {
            name: "billablePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.billablePeriod"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.implicitRules"
        },
        "subType" : {
            name: "subType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.subType",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-subtype"
        },
        "status" : {
            name: "status",
            dataType: ExplanationOfBenefitStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.status",
            valueSet: "http://hl7.org/fhir/ValueSet/explanationofbenefit-status|5.0.0"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.extension"
        },
        "benefitBalance" : {
            name: "benefitBalance",
            dataType: ExplanationOfBenefitBenefitBalance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.benefitBalance"
        },
        "accident" : {
            name: "accident",
            dataType: ExplanationOfBenefitAccident,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.accident"
        },
        "addItem" : {
            name: "addItem",
            dataType: ExplanationOfBenefitAddItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.addItem"
        },
        "total" : {
            name: "total",
            dataType: ExplanationOfBenefitTotal,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.total"
        },
        "related" : {
            name: "related",
            dataType: ExplanationOfBenefitRelated,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.related"
        },
        "fundsReserve" : {
            name: "fundsReserve",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.fundsReserve",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },
        "fundsReserveRequested" : {
            name: "fundsReserveRequested",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.fundsReserveRequested",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },
        "provider" : {
            name: "provider",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.provider"
        },
        "insurer" : {
            name: "insurer",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.insurer"
        },
        "patient" : {
            name: "patient",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.patient"
        },
        "event" : {
            name: "event",
            dataType: ExplanationOfBenefitEvent,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.event"
        },
        "outcome" : {
            name: "outcome",
            dataType: ExplanationOfBenefitOutcome,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.outcome",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-outcome|5.0.0"
        },
        "decision" : {
            name: "decision",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.decision",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-decision"
        },
        "formCode" : {
            name: "formCode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.formCode",
            valueSet: "http://hl7.org/fhir/ValueSet/forms"
        },
        "encounter" : {
            name: "encounter",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.encounter"
        },
        "originalPrescription" : {
            name: "originalPrescription",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.originalPrescription"
        },
        "procedure" : {
            name: "procedure",
            dataType: ExplanationOfBenefitProcedure,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.procedure"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.contained"
        },
        "disposition" : {
            name: "disposition",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.disposition"
        },
        "referral" : {
            name: "referral",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.referral"
        },
        "form" : {
            name: "form",
            dataType: r5:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.form"
        },
        "prescription" : {
            name: "prescription",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.prescription"
        },
        "facility" : {
            name: "facility",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.facility"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type ExplanationOfBenefit record {|
    *r5:DomainResource;

    RESOURCE_NAME_EXPLANATIONOFBENEFIT resourceType = RESOURCE_NAME_EXPLANATIONOFBENEFIT;

    r5:Period benefitPeriod?;
    ExplanationOfBenefitInsurance[] insurance?;
    r5:Reference claimResponse?;
    r5:Identifier[] traceNumber?;
    ExplanationOfBenefitUse use;
    r5:Extension[] modifierExtension?;
    string[] preAuthRef?;
    r5:code language?;
    r5:CodeableConcept diagnosisRelatedGroup?;
    r5:CodeableConcept 'type;
    r5:positiveInt precedence?;
    ExplanationOfBenefitProcessNote[] processNote?;
    ExplanationOfBenefitPayee payee?;
    ExplanationOfBenefitSupportingInfo[] supportingInfo?;
    r5:Reference claim?;
    r5:Reference enterer?;
    ExplanationOfBenefitPayment payment?;
    string id?;
    r5:Narrative text?;
    ExplanationOfBenefitCareTeam[] careTeam?;
    r5:Identifier[] identifier?;
    ExplanationOfBenefitItem[] item?;
    r5:Money patientPaid?;
    r5:dateTime created;
    ExplanationOfBenefitDiagnosis[] diagnosis?;
    r5:CodeableConcept priority?;
    r5:Period[] preAuthRefPeriod?;
    r5:Meta meta?;
    r5:Period billablePeriod?;
    r5:uri implicitRules?;
    r5:CodeableConcept subType?;
    ExplanationOfBenefitStatus status;
    r5:Extension[] extension?;
    ExplanationOfBenefitBenefitBalance[] benefitBalance?;
    ExplanationOfBenefitAccident accident?;
    ExplanationOfBenefitAddItem[] addItem?;
    ExplanationOfBenefitTotal[] total?;
    ExplanationOfBenefitRelated[] related?;
    r5:CodeableConcept fundsReserve?;
    r5:CodeableConcept fundsReserveRequested?;
    r5:Reference provider?;
    r5:Reference insurer?;
    r5:Reference patient;
    ExplanationOfBenefitEvent[] event?;
    ExplanationOfBenefitOutcome outcome;
    r5:CodeableConcept decision?;
    r5:CodeableConcept formCode?;
    r5:Reference[] encounter?;
    r5:Reference originalPrescription?;
    ExplanationOfBenefitProcedure[] procedure?;
    r5:Resource[] contained?;
    string disposition?;
    r5:Reference referral?;
    r5:Attachment form?;
    r5:Reference prescription?;
    r5:Reference facility?;
    r5:Element ...;
|};

# FHIR ExplanationOfBenefitPayment datatype record.
#
# + date - Estimated date the payment will be issued or the actual issue date of payment.
# + identifier - Issuer's unique identifier for the payment instrument.
# + adjustmentReason - Reason for the payment adjustment.
# + amount - Benefits payable less any payment adjustment.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + adjustment - Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Whether this represents partial or complete payment of the benefits payable.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitPayment",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated date the payment will be issued or the actual issue date of payment.",
            path: "ExplanationOfBenefit.payment.date"
        },
        "identifier": {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Issuer's unique identifier for the payment instrument.",
            path: "ExplanationOfBenefit.payment.identifier"
        },
        "adjustmentReason": {
            name: "adjustmentReason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reason for the payment adjustment.",
            path: "ExplanationOfBenefit.payment.adjustmentReason"
        },
        "amount": {
            name: "amount",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Benefits payable less any payment adjustment.",
            path: "ExplanationOfBenefit.payment.amount"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.payment.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.payment.modifierExtension"
        },
        "adjustment": {
            name: "adjustment",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
            path: "ExplanationOfBenefit.payment.adjustment"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.payment.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Whether this represents partial or complete payment of the benefits payable.",
            path: "ExplanationOfBenefit.payment.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitPayment record {|
    *r5:BackboneElement;

    r5:date date?;
    r5:Identifier identifier?;
    r5:CodeableConcept adjustmentReason?;
    r5:Money amount?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Money adjustment?;
    string id?;
    r5:CodeableConcept 'type?;
|};

# FHIR ExplanationOfBenefitItemDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + patientPaid - The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.
# + quantity - The number of repetitions of a service or product.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - Third-tier of goods and services.
# + tax - The total of taxes applicable for this product or service.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + sequence - A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the group (if a grouper) or the line item.detail. Net = unit price * quantity * factor.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitItemDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.detail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.detail.extension"
        },
        "patientPaid": {
            name: "patientPaid",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
            path: "ExplanationOfBenefit.item.detail.patientPaid"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.detail.quantity"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ExplanationOfBenefit.item.detail.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ExplanationOfBenefit.item.detail.traceNumber"
        },
        "programCode": {
            name: "programCode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.detail.programCode"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.detail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.detail.modifierExtension"
        },
        "subDetail": {
            name: "subDetail",
            dataType: ExplanationOfBenefitItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Third-tier of goods and services.",
            path: "ExplanationOfBenefit.item.detail.subDetail"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ExplanationOfBenefit.item.detail.tax"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ExplanationOfBenefit.item.detail.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.detail.noteNumber"
        },
        "sequence": {
            name: "sequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "ExplanationOfBenefit.item.detail.sequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.detail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.detail.id"
        },
        "udi": {
            name: "udi",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.detail.udi"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.detail.category"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.detail.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the group (if a grouper) or the line item.detail. Net = unit price * quantity * factor.",
            path: "ExplanationOfBenefit.item.detail.net"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitItemDetail record {|
    *r5:BackboneElement;

    r5:Money unitPrice?;
    r5:Extension[] extension?;
    r5:Money patientPaid?;
    r5:Quantity quantity?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] programCode?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    ExplanationOfBenefitItemDetailSubDetail[] subDetail?;
    r5:Money tax?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:positiveInt sequence;
    r5:CodeableConcept revenue?;
    string id?;
    r5:Reference[] udi?;
    r5:CodeableConcept category?;
    decimal factor?;
    r5:Money net?;
|};

# FHIR ExplanationOfBenefitDiagnosis datatype record.
#
# + sequence - A number to uniquely identify diagnosis entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + onAdmission - Indication of whether the diagnosis was present on admission to a facility.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - When the condition was observed or the relative ranking.
# + diagnosisReference - The nature of illness or problem in a coded form or as a reference to an external defined Condition.
# + diagnosisCodeableConcept - The nature of illness or problem in a coded form or as a reference to an external defined Condition.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitDiagnosis",
    baseType: (),
    elements: {
        "sequence": {
            name: "sequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify diagnosis entries.",
            path: "ExplanationOfBenefit.diagnosis.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.diagnosis.extension"
        },
        "onAdmission": {
            name: "onAdmission",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication of whether the diagnosis was present on admission to a facility.",
            path: "ExplanationOfBenefit.diagnosis.onAdmission"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.diagnosis.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.diagnosis.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "When the condition was observed or the relative ranking.",
            path: "ExplanationOfBenefit.diagnosis.type"
        },
        "diagnosisReference": {
            name: "diagnosisReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
            path: "ExplanationOfBenefit.diagnosis.diagnosis[x]"
        },
        "diagnosisCodeableConcept": {
            name: "diagnosisCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
            path: "ExplanationOfBenefit.diagnosis.diagnosis[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitDiagnosis record {|
    *r5:BackboneElement;

    r5:positiveInt sequence;
    r5:Extension[] extension?;
    r5:CodeableConcept onAdmission?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept[] 'type?;
    r5:Reference diagnosisReference;
    r5:CodeableConcept diagnosisCodeableConcept;
|};

# FHIR ExplanationOfBenefitEvent datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + whenDateTime - A date or period in the past or future indicating when the event occurred or is expectd to occur.
# + whenPeriod - A date or period in the past or future indicating when the event occurred or is expectd to occur.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded event such as when a service is expected or a card printed.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitEvent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.event.extension"
        },
        "whenDateTime": {
            name: "whenDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "A date or period in the past or future indicating when the event occurred or is expectd to occur.",
            path: "ExplanationOfBenefit.event.when[x]"
        },
        "whenPeriod": {
            name: "whenPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "A date or period in the past or future indicating when the event occurred or is expectd to occur.",
            path: "ExplanationOfBenefit.event.when[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.event.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.event.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded event such as when a service is expected or a card printed.",
            path: "ExplanationOfBenefit.event.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitEvent record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:dateTime whenDateTime;
    r5:Period whenPeriod;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR ExplanationOfBenefitProcedure datatype record.
#
# + date - Date and optionally time the procedure was performed.
# + sequence - A number to uniquely identify procedure entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + procedureCodeableConcept - The code or reference to a Procedure resource which identifies the clinical intervention performed.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + procedureReference - The code or reference to a Procedure resource which identifies the clinical intervention performed.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + 'type - When the condition was observed or the relative ranking.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitProcedure",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date and optionally time the procedure was performed.",
            path: "ExplanationOfBenefit.procedure.date"
        },
        "sequence": {
            name: "sequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify procedure entries.",
            path: "ExplanationOfBenefit.procedure.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.procedure.extension"
        },
        "procedureCodeableConcept": {
            name: "procedureCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
            path: "ExplanationOfBenefit.procedure.procedure[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.procedure.modifierExtension"
        },
        "procedureReference": {
            name: "procedureReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
            path: "ExplanationOfBenefit.procedure.procedure[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.procedure.id"
        },
        "udi": {
            name: "udi",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.procedure.udi"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "When the condition was observed or the relative ranking.",
            path: "ExplanationOfBenefit.procedure.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitProcedure record {|
    *r5:BackboneElement;

    r5:dateTime date?;
    r5:positiveInt sequence;
    r5:Extension[] extension?;
    r5:CodeableConcept procedureCodeableConcept;
    r5:Extension[] modifierExtension?;
    r5:Reference procedureReference;
    string id?;
    r5:Reference[] udi?;
    r5:CodeableConcept[] 'type?;
|};

# FHIR ExplanationOfBenefitRelated datatype record.
#
# + reference - An alternate organizational reference to the case or file to which this particular claim pertains.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + claim - Reference to a related claim.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - A code to convey how the claims are related.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitRelated",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An alternate organizational reference to the case or file to which this particular claim pertains.",
            path: "ExplanationOfBenefit.related.reference"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.related.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.related.modifierExtension"
        },
        "claim": {
            name: "claim",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to a related claim.",
            path: "ExplanationOfBenefit.related.claim"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.related.id"
        },
        "relationship": {
            name: "relationship",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code to convey how the claims are related.",
            path: "ExplanationOfBenefit.related.relationship"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitRelated record {|
    *r5:BackboneElement;

    r5:Identifier reference?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Reference claim?;
    string id?;
    r5:CodeableConcept relationship?;
|};

# FHIR ExplanationOfBenefitAccident datatype record.
#
# + date - Date of an accident event related to the products and services contained in the claim.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationAddress - The physical location of the accident event.
# + locationReference - The physical location of the accident event.
# + 'type - The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitAccident",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date of an accident event related to the products and services contained in the claim.",
            path: "ExplanationOfBenefit.accident.date"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.accident.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.accident.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.accident.id"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r5:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "The physical location of the accident event.",
            path: "ExplanationOfBenefit.accident.location[x]"
        },
        "locationReference": {
            name: "locationReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The physical location of the accident event.",
            path: "ExplanationOfBenefit.accident.location[x]"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.",
            path: "ExplanationOfBenefit.accident.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitAccident record {|
    *r5:BackboneElement;

    r5:date date?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:Address locationAddress?;
    r5:Reference locationReference?;
    r5:CodeableConcept 'type?;
|};

# FHIR ExplanationOfBenefitItemBodySite datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + site - Physical service site on the patient (limb, tooth, etc.).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitItemBodySite",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.bodySite.extension"
        },
        "site": {
            name: "site",
            dataType: r5:CodeableReference,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "ExplanationOfBenefit.item.bodySite.site"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.bodySite.modifierExtension"
        },
        "subSite": {
            name: "subSite",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "ExplanationOfBenefit.item.bodySite.subSite"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.bodySite.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitItemBodySite record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.bodySite.site constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.bodySite.site constraint. This field must be an array containing at most one item."
        }
    }
    r5:CodeableReference[] site;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] subSite?;
    string id?;
|};

# FHIR ExplanationOfBenefitAddItemBodySite datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + site - Physical service site on the patient (limb, tooth, etc.).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitAddItemBodySite",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.bodySite.extension"
        },
        "site": {
            name: "site",
            dataType: r5:CodeableReference,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "ExplanationOfBenefit.addItem.bodySite.site"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.bodySite.modifierExtension"
        },
        "subSite": {
            name: "subSite",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "ExplanationOfBenefit.addItem.bodySite.subSite"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.bodySite.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitAddItemBodySite record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.addItem.bodySite.site constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.addItem.bodySite.site constraint. This field must be an array containing at most one item."
        }
    }
    r5:CodeableReference[] site;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] subSite?;
    string id?;
|};

# FHIR ExplanationOfBenefitItemAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitItemAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.quantity"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitItemAdjudication record {|
    *r5:BackboneElement;

    r5:CodeableConcept reason?;
    r5:Money amount?;
    r5:Extension[] extension?;
    r5:Quantity quantity?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept category;
|};

# FHIR ExplanationOfBenefitTotal datatype record.
#
# + amount - Monetary total amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitTotal",
    baseType: (),
    elements: {
        "amount": {
            name: "amount",
            dataType: r5:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Monetary total amount associated with the category.",
            path: "ExplanationOfBenefit.total.amount"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.total.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.total.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.total.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.total.category"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitTotal record {|
    *r5:BackboneElement;

    r5:Money amount;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept category;
|};

# FHIR ExplanationOfBenefitItemReviewOutcome datatype record.
#
# + reason - The reasons for the result of the claim, predetermination, or preauthorization adjudication.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + preAuthPeriod - The time frame during which this authorization is effective.
# + decision - The result of the claim, predetermination, or preauthorization adjudication.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference from the Insurer which is used in later communications which refers to this adjudication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitItemReviewOutcome",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The reasons for the result of the claim, predetermination, or preauthorization adjudication.",
            path: "ExplanationOfBenefit.item.reviewOutcome.reason"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.reviewOutcome.extension"
        },
        "preAuthPeriod": {
            name: "preAuthPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The time frame during which this authorization is effective.",
            path: "ExplanationOfBenefit.item.reviewOutcome.preAuthPeriod"
        },
        "decision": {
            name: "decision",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The result of the claim, predetermination, or preauthorization adjudication.",
            path: "ExplanationOfBenefit.item.reviewOutcome.decision"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.reviewOutcome.modifierExtension"
        },
        "preAuthRef": {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference from the Insurer which is used in later communications which refers to this adjudication.",
            path: "ExplanationOfBenefit.item.reviewOutcome.preAuthRef"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.reviewOutcome.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitItemReviewOutcome record {|
    *r5:BackboneElement;

    r5:CodeableConcept[] reason?;
    r5:Extension[] extension?;
    r5:Period preAuthPeriod?;
    r5:CodeableConcept decision?;
    r5:Extension[] modifierExtension?;
    string preAuthRef?;
    string id?;
|};

# FHIR ExplanationOfBenefitBenefitBalanceFinancial datatype record.
#
# + allowedExplanationOfBenefitMoney - The quantity of the benefit which is permitted under the coverage.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + allowedExplanationOfBenefitUnsignedInt - The quantity of the benefit which is permitted under the coverage.
# + allowedExplanationOfBenefitString - The quantity of the benefit which is permitted under the coverage.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + usedExplanationOfBenefitUnsignedInt - The quantity of the benefit which have been consumed to date.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + usedExplanationOfBenefitMoney - The quantity of the benefit which have been consumed to date.
# + 'type - Classification of benefit being provided.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitBenefitBalanceFinancial",
    baseType: (),
    elements: {
        "allowedExplanationOfBenefitMoney": {
            name: "allowedExplanationOfBenefitMoney",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.benefitBalance.financial.extension"
        },
        "allowedExplanationOfBenefitUnsignedInt": {
            name: "allowedExplanationOfBenefitUnsignedInt",
            dataType: r5:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },
        "allowedExplanationOfBenefitString": {
            name: "allowedExplanationOfBenefitString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.benefitBalance.financial.modifierExtension"
        },
        "usedExplanationOfBenefitUnsignedInt": {
            name: "usedExplanationOfBenefitUnsignedInt",
            dataType: r5:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial.used[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.benefitBalance.financial.id"
        },
        "usedExplanationOfBenefitMoney": {
            name: "usedExplanationOfBenefitMoney",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial.used[x]"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Classification of benefit being provided.",
            path: "ExplanationOfBenefit.benefitBalance.financial.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitBenefitBalanceFinancial record {|
    *r5:BackboneElement;

    r5:Money allowedExplanationOfBenefitMoney?;
    r5:Extension[] extension?;
    r5:unsignedInt allowedExplanationOfBenefitUnsignedInt?;
    string allowedExplanationOfBenefitString?;
    r5:Extension[] modifierExtension?;
    r5:unsignedInt usedExplanationOfBenefitUnsignedInt?;
    string id?;
    r5:Money usedExplanationOfBenefitMoney?;
    r5:CodeableConcept 'type;
|};

# FHIR ExplanationOfBenefitAddItemDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + patientPaid - The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.
# + quantity - The number of repetitions of a service or product.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - The third-tier service adjudications for payor added services.
# + tax - The total of taxes applicable for this product or service.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the group (if a grouper) or the addItem.detail. Net = unit price * quantity * factor.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitAddItemDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.detail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.detail.extension"
        },
        "patientPaid": {
            name: "patientPaid",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
            path: "ExplanationOfBenefit.addItem.detail.patientPaid"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.detail.quantity"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ExplanationOfBenefit.addItem.detail.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ExplanationOfBenefit.addItem.detail.traceNumber"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.detail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.detail.modifierExtension"
        },
        "subDetail": {
            name: "subDetail",
            dataType: ExplanationOfBenefitAddItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The third-tier service adjudications for payor added services.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ExplanationOfBenefit.addItem.detail.tax"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ExplanationOfBenefit.addItem.detail.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.detail.noteNumber"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.addItem.detail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.detail.id"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.detail.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the group (if a grouper) or the addItem.detail. Net = unit price * quantity * factor.",
            path: "ExplanationOfBenefit.addItem.detail.net"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitAddItemDetail record {|
    *r5:BackboneElement;

    r5:Money unitPrice?;
    r5:Extension[] extension?;
    r5:Money patientPaid?;
    r5:Quantity quantity?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    ExplanationOfBenefitAddItemDetailSubDetail[] subDetail?;
    r5:Money tax?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:CodeableConcept revenue?;
    string id?;
    decimal factor?;
    r5:Money net?;
|};

# FHIR ExplanationOfBenefitPayee datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Type of Party to be reimbursed: Subscriber, provider, other.
# + party - Reference to the individual or organization to whom any payment will be made.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitPayee",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.payee.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.payee.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.payee.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Type of Party to be reimbursed: Subscriber, provider, other.",
            path: "ExplanationOfBenefit.payee.type"
        },
        "party": {
            name: "party",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to the individual or organization to whom any payment will be made.",
            path: "ExplanationOfBenefit.payee.party"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitPayee record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type?;
    r5:Reference party?;
|};

# FHIR ExplanationOfBenefitAddItem datatype record.
#
# + request - Request or Referral for Goods or Service to be rendered.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + locationAddress - Where the product or service was provided.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + subDetailSequence - The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.
# + itemSequence - Claim items which this service line is intended to replace.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + locationCodeableConcept - Where the product or service was provided.
# + provider - The providers who are authorized for the services rendered to the patient.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationReference - Where the product or service was provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the group (if a grouper) or the addItem. Net = unit price * quantity * factor.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + patientPaid - The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + tax - The total of taxes applicable for this product or service.
# + bodySite - Physical location where the service is performed or applies.
# + detailSequence - The sequence number of the details within the claim item which this line is intended to replace.
# + detail - The second-tier service adjudications for payor added services.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitAddItem",
    baseType: (),
    elements: {
        "request": {
            name: "request",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Request or Referral for Goods or Service to be rendered.",
            path: "ExplanationOfBenefit.addItem.request"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.extension"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ExplanationOfBenefit.addItem.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ExplanationOfBenefit.addItem.traceNumber"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.modifierExtension"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r5:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ExplanationOfBenefit.addItem.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.noteNumber"
        },
        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.addItem.serviced[x]"
        },
        "subDetailSequence": {
            name: "subDetailSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.subDetailSequence"
        },
        "itemSequence": {
            name: "itemSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Claim items which this service line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.itemSequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.addItem.revenue"
        },
        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },
        "provider": {
            name: "provider",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The providers who are authorized for the services rendered to the patient.",
            path: "ExplanationOfBenefit.addItem.provider"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.id"
        },
        "locationReference": {
            name: "locationReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the group (if a grouper) or the addItem. Net = unit price * quantity * factor.",
            path: "ExplanationOfBenefit.addItem.net"
        },
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.unitPrice"
        },
        "patientPaid": {
            name: "patientPaid",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
            path: "ExplanationOfBenefit.addItem.patientPaid"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.addItem.programCode"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ExplanationOfBenefit.addItem.tax"
        },
        "bodySite": {
            name: "bodySite",
            dataType: ExplanationOfBenefitAddItemBodySite,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Physical location where the service is performed or applies.",
            path: "ExplanationOfBenefit.addItem.bodySite"
        },
        "detailSequence": {
            name: "detailSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the details within the claim item which this line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.detailSequence"
        },
        "detail": {
            name: "detail",
            dataType: ExplanationOfBenefitAddItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The second-tier service adjudications for payor added services.",
            path: "ExplanationOfBenefit.addItem.detail"
        },
        "servicedDate": {
            name: "servicedDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.addItem.serviced[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitAddItem record {|
    *r5:BackboneElement;

    r5:Reference[] request?;
    r5:Extension[] extension?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    r5:Address locationAddress?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:Period servicedPeriod?;
    r5:positiveInt[] subDetailSequence?;
    r5:positiveInt[] itemSequence?;
    r5:CodeableConcept revenue?;
    r5:CodeableConcept locationCodeableConcept?;
    r5:Reference[] provider?;
    string id?;
    r5:Reference locationReference?;
    decimal factor?;
    r5:Money net?;
    r5:Money unitPrice?;
    r5:Money patientPaid?;
    r5:Quantity quantity?;
    r5:CodeableConcept[] programCode?;
    r5:Money tax?;
    ExplanationOfBenefitAddItemBodySite[] bodySite?;
    r5:positiveInt[] detailSequence?;
    ExplanationOfBenefitAddItemDetail[] detail?;
    r5:date servicedDate?;
|};

# ExplanationOfBenefitOutcome enum
public enum ExplanationOfBenefitOutcome {
   CODE_OUTCOME_QUEUED = "queued",
   CODE_OUTCOME_COMPLETE = "complete",
   CODE_OUTCOME_ERROR = "error",
   CODE_OUTCOME_PARTIAL = "partial"
}

# ExplanationOfBenefitStatus enum
public enum ExplanationOfBenefitStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_CANCELLED = "cancelled",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR ExplanationOfBenefitItem datatype record.
#
# + request - Request or Referral for Goods or Service to be rendered.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + locationAddress - Where the product or service was provided.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + adjudication - If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.
# + informationSequence - Exceptions, special conditions and supporting information applicable for this service or product.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + locationCodeableConcept - Where the product or service was provided.
# + diagnosisSequence - Diagnoses applicable for this service or product.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationReference - Where the product or service was provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the group (if a grouper) or the line item. Net = unit price * quantity * factor.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + patientPaid - The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + careTeamSequence - Care team members related to this service or product.
# + tax - The total of taxes applicable for this product or service.
# + encounter - Healthcare encounters related to this claim.
# + sequence - A number to uniquely identify item entries.
# + bodySite - Physical location where the service is performed or applies.
# + reviewOutcome - The high-level results of the adjudication if adjudication has been performed.
# + detail - Second-tier of goods and services.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + procedureSequence - Procedures applicable for this service or product.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitItem",
    baseType: (),
    elements: {
        "request": {
            name: "request",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Request or Referral for Goods or Service to be rendered.",
            path: "ExplanationOfBenefit.item.request"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.extension"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ExplanationOfBenefit.item.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ExplanationOfBenefit.item.traceNumber"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.modifierExtension"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r5:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.item.location[x]"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ExplanationOfBenefit.item.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.noteNumber"
        },
        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.item.serviced[x]"
        },
        "adjudication": {
            name: "adjudication",
            dataType: ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
            path: "ExplanationOfBenefit.item.adjudication"
        },
        "informationSequence": {
            name: "informationSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Exceptions, special conditions and supporting information applicable for this service or product.",
            path: "ExplanationOfBenefit.item.informationSequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.revenue"
        },
        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.item.location[x]"
        },
        "diagnosisSequence": {
            name: "diagnosisSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Diagnoses applicable for this service or product.",
            path: "ExplanationOfBenefit.item.diagnosisSequence"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.id"
        },
        "locationReference": {
            name: "locationReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.item.location[x]"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the group (if a grouper) or the line item. Net = unit price * quantity * factor.",
            path: "ExplanationOfBenefit.item.net"
        },
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.unitPrice"
        },
        "patientPaid": {
            name: "patientPaid",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
            path: "ExplanationOfBenefit.item.patientPaid"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.programCode"
        },
        "careTeamSequence": {
            name: "careTeamSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Care team members related to this service or product.",
            path: "ExplanationOfBenefit.item.careTeamSequence"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ExplanationOfBenefit.item.tax"
        },
        "encounter": {
            name: "encounter",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Healthcare encounters related to this claim.",
            path: "ExplanationOfBenefit.item.encounter"
        },
        "sequence": {
            name: "sequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify item entries.",
            path: "ExplanationOfBenefit.item.sequence"
        },
        "bodySite": {
            name: "bodySite",
            dataType: ExplanationOfBenefitItemBodySite,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Physical location where the service is performed or applies.",
            path: "ExplanationOfBenefit.item.bodySite"
        },
        "reviewOutcome": {
            name: "reviewOutcome",
            dataType: ExplanationOfBenefitItemReviewOutcome,
            min: 0,
            max: 1,
            isArray: false,
            description: "The high-level results of the adjudication if adjudication has been performed.",
            path: "ExplanationOfBenefit.item.reviewOutcome"
        },
        "detail": {
            name: "detail",
            dataType: ExplanationOfBenefitItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Second-tier of goods and services.",
            path: "ExplanationOfBenefit.item.detail"
        },
        "servicedDate": {
            name: "servicedDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.item.serviced[x]"
        },
        "udi": {
            name: "udi",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.udi"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.category"
        },
        "procedureSequence": {
            name: "procedureSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Procedures applicable for this service or product.",
            path: "ExplanationOfBenefit.item.procedureSequence"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitItem record {|
    *r5:BackboneElement;

    r5:Reference[] request?;
    r5:Extension[] extension?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    r5:Address locationAddress?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:Period servicedPeriod?;
    ExplanationOfBenefitItemAdjudication[] adjudication?;
    r5:positiveInt[] informationSequence?;
    r5:CodeableConcept revenue?;
    r5:CodeableConcept locationCodeableConcept?;
    r5:positiveInt[] diagnosisSequence?;
    string id?;
    r5:Reference locationReference?;
    decimal factor?;
    r5:Money net?;
    r5:Money unitPrice?;
    r5:Money patientPaid?;
    r5:Quantity quantity?;
    r5:CodeableConcept[] programCode?;
    r5:positiveInt[] careTeamSequence?;
    r5:Money tax?;
    r5:Reference[] encounter?;
    r5:positiveInt sequence;
    ExplanationOfBenefitItemBodySite[] bodySite?;
    ExplanationOfBenefitItemReviewOutcome reviewOutcome?;
    ExplanationOfBenefitItemDetail[] detail?;
    r5:date servicedDate?;
    r5:Reference[] udi?;
    r5:CodeableConcept category?;
    r5:positiveInt[] procedureSequence?;
|};

# ExplanationOfBenefitUse enum
public enum ExplanationOfBenefitUse {
   CODE_USE_PREDETERMINATION = "predetermination",
   CODE_USE_PREAUTHORIZATION = "preauthorization",
   CODE_USE_CLAIM = "claim"
}

# FHIR ExplanationOfBenefitSupportingInfo datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueIdentifier - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitSupportingInfo",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r5:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitSupportingInfo record {|
    *r5:BackboneElement;

    boolean valueBoolean?;
    r5:Coding reason?;
    r5:Extension[] extension?;
    r5:Identifier valueIdentifier?;
    r5:CodeableConcept code?;
    r5:Reference valueReference?;
    r5:Period timingPeriod?;
    r5:Extension[] modifierExtension?;
    r5:date timingDate?;
    r5:positiveInt sequence;
    r5:Attachment valueAttachment?;
    string valueString?;
    string id?;
    r5:CodeableConcept category;
    r5:Quantity valueQuantity?;
|};

# FHIR ExplanationOfBenefitAddItemDetailSubDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + patientPaid - The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.
# + quantity - The number of repetitions of a service or product.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + tax - The total of taxes applicable for this product or service.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the addItem.detail.subDetail. Net = unit price * quantity * factor.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitAddItemDetailSubDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.extension"
        },
        "patientPaid": {
            name: "patientPaid",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.patientPaid"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.quantity"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.traceNumber"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.modifierExtension"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.tax"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.noteNumber"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.id"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the addItem.detail.subDetail. Net = unit price * quantity * factor.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.net"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitAddItemDetailSubDetail record {|
    *r5:BackboneElement;

    r5:Money unitPrice?;
    r5:Extension[] extension?;
    r5:Money patientPaid?;
    r5:Quantity quantity?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    r5:Money tax?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:CodeableConcept revenue?;
    string id?;
    decimal factor?;
    r5:Money net?;
|};

# FHIR ExplanationOfBenefitProcessNote datatype record.
#
# + number - A number to uniquely identify a note entry.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - A code to define the language used in the text of the note.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - The explanation or description associated with the processing.
# + 'type - The business purpose of the note text.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitProcessNote",
    baseType: (),
    elements: {
        "number": {
            name: "number",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify a note entry.",
            path: "ExplanationOfBenefit.processNote.number"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.processNote.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.processNote.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code to define the language used in the text of the note.",
            path: "ExplanationOfBenefit.processNote.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.processNote.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The explanation or description associated with the processing.",
            path: "ExplanationOfBenefit.processNote.text"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The business purpose of the note text.",
            path: "ExplanationOfBenefit.processNote.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitProcessNote record {|
    *r5:BackboneElement;

    r5:positiveInt number?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept language?;
    string id?;
    string text?;
    r5:CodeableConcept 'type?;
|};

# FHIR ExplanationOfBenefitItemDetailSubDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + patientPaid - The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.
# + quantity - The number of repetitions of a service or product.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + tax - The total of taxes applicable for this product or service.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + sequence - A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the line item.detail.subDetail. Net = unit price * quantity * factor.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitItemDetailSubDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.detail.subDetail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.detail.subDetail.extension"
        },
        "patientPaid": {
            name: "patientPaid",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The amount paid by the patient, in total at the claim claim level or specifically for the item and detail level, to the provider for goods and services.",
            path: "ExplanationOfBenefit.item.detail.subDetail.patientPaid"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.detail.subDetail.quantity"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ExplanationOfBenefit.item.detail.subDetail.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ExplanationOfBenefit.item.detail.subDetail.traceNumber"
        },
        "programCode": {
            name: "programCode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.detail.subDetail.programCode"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.detail.subDetail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.detail.subDetail.modifierExtension"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ExplanationOfBenefit.item.detail.subDetail.tax"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ExplanationOfBenefit.item.detail.subDetail.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.detail.subDetail.noteNumber"
        },
        "sequence": {
            name: "sequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "ExplanationOfBenefit.item.detail.subDetail.sequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.detail.subDetail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.detail.subDetail.id"
        },
        "udi": {
            name: "udi",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.detail.subDetail.udi"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.detail.subDetail.category"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.detail.subDetail.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the line item.detail.subDetail. Net = unit price * quantity * factor.",
            path: "ExplanationOfBenefit.item.detail.subDetail.net"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitItemDetailSubDetail record {|
    *r5:BackboneElement;

    r5:Money unitPrice?;
    r5:Extension[] extension?;
    r5:Money patientPaid?;
    r5:Quantity quantity?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] programCode?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    r5:Money tax?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:positiveInt sequence;
    r5:CodeableConcept revenue?;
    string id?;
    r5:Reference[] udi?;
    r5:CodeableConcept category?;
    decimal factor?;
    r5:Money net?;
|};

# FHIR ExplanationOfBenefitBenefitBalance datatype record.
#
# + excluded - True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + unit - Indicates if the benefits apply to an individual or to the family.
# + financial - Benefits Used to date.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - A short name or tag for the benefit.
# + description - A richer description of the benefit or services covered.
# + term - The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + network - Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitBenefitBalance",
    baseType: (),
    elements: {
        "excluded": {
            name: "excluded",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.excluded"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.benefitBalance.extension"
        },
        "unit": {
            name: "unit",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates if the benefits apply to an individual or to the family.",
            path: "ExplanationOfBenefit.benefitBalance.unit"
        },
        "financial": {
            name: "financial",
            dataType: ExplanationOfBenefitBenefitBalanceFinancial,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Benefits Used to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.benefitBalance.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short name or tag for the benefit.",
            path: "ExplanationOfBenefit.benefitBalance.name"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A richer description of the benefit or services covered.",
            path: "ExplanationOfBenefit.benefitBalance.description"
        },
        "term": {
            name: "term",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.",
            path: "ExplanationOfBenefit.benefitBalance.term"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.benefitBalance.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.benefitBalance.category"
        },
        "network": {
            name: "network",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
            path: "ExplanationOfBenefit.benefitBalance.network"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitBenefitBalance record {|
    *r5:BackboneElement;

    boolean excluded?;
    r5:Extension[] extension?;
    r5:CodeableConcept unit?;
    ExplanationOfBenefitBenefitBalanceFinancial[] financial?;
    r5:Extension[] modifierExtension?;
    string name?;
    string description?;
    r5:CodeableConcept term?;
    string id?;
    r5:CodeableConcept category;
    r5:CodeableConcept network?;
|};

# FHIR ExplanationOfBenefitCareTeam datatype record.
#
# + sequence - A number to uniquely identify care team entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + specialty - The specialization of the practitioner or provider which is applicable for this service.
# + role - The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.
# + provider - Member of the team who provided the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + responsible - The party who is billing and/or responsible for the claimed products or services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitCareTeam",
    baseType: (),
    elements: {
        "sequence": {
            name: "sequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify care team entries.",
            path: "ExplanationOfBenefit.careTeam.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.careTeam.extension"
        },
        "specialty": {
            name: "specialty",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The specialization of the practitioner or provider which is applicable for this service.",
            path: "ExplanationOfBenefit.careTeam.specialty"
        },
        "role": {
            name: "role",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
            path: "ExplanationOfBenefit.careTeam.role"
        },
        "provider": {
            name: "provider",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Member of the team who provided the product or service.",
            path: "ExplanationOfBenefit.careTeam.provider"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.careTeam.modifierExtension"
        },
        "responsible": {
            name: "responsible",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The party who is billing and/or responsible for the claimed products or services.",
            path: "ExplanationOfBenefit.careTeam.responsible"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.careTeam.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitCareTeam record {|
    *r5:BackboneElement;

    r5:positiveInt sequence;
    r5:Extension[] extension?;
    r5:CodeableConcept specialty?;
    r5:CodeableConcept role?;
    r5:Reference provider;
    r5:Extension[] modifierExtension?;
    boolean responsible?;
    string id?;
|};

# FHIR ExplanationOfBenefitInsurance datatype record.
#
# + coverage - Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + focal - A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ExplanationOfBenefitInsurance",
    baseType: (),
    elements: {
        "coverage": {
            name: "coverage",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
            path: "ExplanationOfBenefit.insurance.coverage"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.insurance.extension"
        },
        "focal": {
            name: "focal",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
            path: "ExplanationOfBenefit.insurance.focal"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.insurance.modifierExtension"
        },
        "preAuthRef": {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
            path: "ExplanationOfBenefit.insurance.preAuthRef"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.insurance.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExplanationOfBenefitInsurance record {|
    *r5:BackboneElement;

    r5:Reference coverage;
    r5:Extension[] extension?;
    boolean focal;
    r5:Extension[] modifierExtension?;
    string[] preAuthRef?;
    string id?;
|};

