// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_INGREDIENT = "http://hl7.org/fhir/StructureDefinition/Ingredient";
public const RESOURCE_NAME_INGREDIENT = "Ingredient";

# FHIR Ingredient resource record.
#
# + resourceType - The type of the resource describes
# + identifier - The identifier(s) of this Ingredient that are assigned by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + role - A classification of the ingredient identifying its purpose within the product, e.g. active, inactive.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + substance - The substance that comprises this ingredient.
# + for - The product which this ingredient is a constituent part of.
# + language - The base language in which the resource is written.
# + allergenicIndicator - If the ingredient is a known or suspected allergen. Note that this is a property of the substance, so if a reference to a SubstanceDefinition is used to decribe that (rather than just a code), the allergen information should go there, not here.
# + manufacturer - The organization(s) that manufacture this ingredient. Can be used to indicate: 1) Organizations we are aware of that manufacture this ingredient 2) Specific Manufacturer(s) currently being used 3) Set of organisations allowed to manufacture this ingredient for this product Users must be clear on the application of context relevant to their use case.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + 'function - A classification of the ingredient identifying its precise purpose(s) in the drug product. This extends the Ingredient.role to add more detail. Example: antioxidant, alkalizing agent.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + comment - A place for providing any notes that are relevant to the component, e.g. removed during process, adjusted for loss on drying.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + group - A classification of the ingredient according to where in the physical item it tends to be used, such the outer shell of a tablet, inner body or ink.
# + status - The status of this ingredient. Enables tracking the life-cycle of the content.
@r5:ResourceDefinition {
    resourceType: "Ingredient",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/Ingredient",
    elements: {
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.identifier"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Ingredient.extension"
        },
        "role" : {
            name: "role",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "Ingredient.role",
            valueSet: "http://hl7.org/fhir/ValueSet/ingredient-role"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Ingredient.modifierExtension"
        },
        "substance" : {
            name: "substance",
            dataType: IngredientSubstance,
            min: 1,
            max: 1,
            isArray: false,
            path: "Ingredient.substance"
        },
        "for" : {
            name: "for",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Ingredient.for"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "allergenicIndicator" : {
            name: "allergenicIndicator",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.allergenicIndicator"
        },
        "manufacturer" : {
            name: "manufacturer",
            dataType: IngredientManufacturer,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Ingredient.manufacturer"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Ingredient.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.meta"
        },
        "function" : {
            name: "function",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Ingredient.function",
            valueSet: "http://hl7.org/fhir/ValueSet/ingredient-function"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.implicitRules"
        },
        "comment" : {
            name: "comment",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.comment"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.text"
        },
        "group" : {
            name: "group",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Ingredient.group"
        },
        "status" : {
            name: "status",
            dataType: IngredientStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Ingredient.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type Ingredient record {|
    *r5:DomainResource;

    RESOURCE_NAME_INGREDIENT resourceType = RESOURCE_NAME_INGREDIENT;

    r5:Identifier identifier?;
    r5:Extension[] extension?;
    r5:CodeableConcept role;
    r5:Extension[] modifierExtension?;
    IngredientSubstance substance;
    r5:Reference[] for?;
    r5:code language?;
    boolean allergenicIndicator?;
    IngredientManufacturer[] manufacturer?;
    r5:Resource[] contained?;
    r5:Meta meta?;
    r5:CodeableConcept[] 'function?;
    r5:uri implicitRules?;
    r5:markdown comment?;
    string id?;
    r5:Narrative text?;
    r5:CodeableConcept group?;
    IngredientStatus status;
    r5:Element ...;
|};

# FHIR IngredientSubstance datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code or full resource that represents the ingredient's substance.
# + strength - The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. The allowed repetitions do not represent different strengths, but are different representations - mathematically equivalent - of a single strength.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "IngredientSubstance",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Ingredient.substance.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code or full resource that represents the ingredient's substance.",
            path: "Ingredient.substance.code"
        },
        "strength": {
            name: "strength",
            dataType: IngredientSubstanceStrength,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. The allowed repetitions do not represent different strengths, but are different representations - mathematically equivalent - of a single strength.",
            path: "Ingredient.substance.strength"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Ingredient.substance.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Ingredient.substance.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type IngredientSubstance record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableReference code;
    IngredientSubstanceStrength[] strength?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# IngredientStatus enum
public enum IngredientStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR IngredientSubstanceStrengthReferenceStrength datatype record.
#
# + country - The country or countries for which the strength range applies.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + strengthIngredientRatio - Strength expressed in terms of a reference substance.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + strengthIngredientQuantity - Strength expressed in terms of a reference substance.
# + substance - Relevant reference substance.
# + strengthIngredientRatioRange - Strength expressed in terms of a reference substance.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + measurementPoint - For when strength is measured at a particular point or distance.
@r5:DataTypeDefinition {
    name: "IngredientSubstanceStrengthReferenceStrength",
    baseType: (),
    elements: {
        "country": {
            name: "country",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The country or countries for which the strength range applies.",
            path: "Ingredient.substance.strength.referenceStrength.country"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Ingredient.substance.strength.referenceStrength.extension"
        },
        "strengthIngredientRatio": {
            name: "strengthIngredientRatio",
            dataType: r5:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Strength expressed in terms of a reference substance.",
            path: "Ingredient.substance.strength.referenceStrength.strength[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Ingredient.substance.strength.referenceStrength.modifierExtension"
        },
        "strengthIngredientQuantity": {
            name: "strengthIngredientQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Strength expressed in terms of a reference substance.",
            path: "Ingredient.substance.strength.referenceStrength.strength[x]"
        },
        "substance": {
            name: "substance",
            dataType: r5:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Relevant reference substance.",
            path: "Ingredient.substance.strength.referenceStrength.substance"
        },
        "strengthIngredientRatioRange": {
            name: "strengthIngredientRatioRange",
            dataType: r5:RatioRange,
            min: 0,
            max: 1,
            isArray: false,
            description: "Strength expressed in terms of a reference substance.",
            path: "Ingredient.substance.strength.referenceStrength.strength[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Ingredient.substance.strength.referenceStrength.id"
        },
        "measurementPoint": {
            name: "measurementPoint",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "For when strength is measured at a particular point or distance.",
            path: "Ingredient.substance.strength.referenceStrength.measurementPoint"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type IngredientSubstanceStrengthReferenceStrength record {|
    *r5:BackboneElement;

    r5:CodeableConcept[] country?;
    r5:Extension[] extension?;
    r5:Ratio strengthIngredientRatio;
    r5:Extension[] modifierExtension?;
    r5:Quantity strengthIngredientQuantity;
    r5:CodeableReference substance;
    r5:RatioRange strengthIngredientRatioRange;
    string id?;
    string measurementPoint?;
|};

# FHIR IngredientManufacturer datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + role - The way in which this manufacturer is associated with the ingredient. For example whether it is a possible one (others allowed), or an exclusive authorized one for this ingredient. Note that this is not the manufacturing process role.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + manufacturer - An organization that manufactures this ingredient.
@r5:DataTypeDefinition {
    name: "IngredientManufacturer",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Ingredient.manufacturer.extension"
        },
        "role": {
            name: "role",
            dataType: IngredientManufacturerRole,
            min: 0,
            max: 1,
            isArray: false,
            description: "The way in which this manufacturer is associated with the ingredient. For example whether it is a possible one (others allowed), or an exclusive authorized one for this ingredient. Note that this is not the manufacturing process role.",
            path: "Ingredient.manufacturer.role"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Ingredient.manufacturer.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Ingredient.manufacturer.id"
        },
        "manufacturer": {
            name: "manufacturer",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "An organization that manufactures this ingredient.",
            path: "Ingredient.manufacturer.manufacturer"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type IngredientManufacturer record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    IngredientManufacturerRole role?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:Reference manufacturer;
|};

# FHIR IngredientSubstanceStrength datatype record.
#
# + concentrationIngredientCodeableConcept - The strength per unitary volume (or mass).
# + country - The country or countries for which the strength range applies.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + textConcentration - A textual represention of either the whole of the concentration strength or a part of it - with the rest being in Strength.concentration as a ratio.
# + presentationIngredientRatioRange - The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + presentationIngredientCodeableConcept - The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').
# + basis - A code that indicates if the strength is, for example, based on the ingredient substance as stated or on the substance base (when the ingredient is a salt).
# + concentrationIngredientQuantity - The strength per unitary volume (or mass).
# + textPresentation - A textual represention of either the whole of the presentation strength or a part of it - with the rest being in Strength.presentation as a ratio.
# + referenceStrength - Strength expressed in terms of a reference substance. For when the ingredient strength is additionally expressed as equivalent to the strength of some other closely related substance (e.g. salt vs. base). Reference strength represents the strength (quantitative composition) of the active moiety of the active substance. There are situations when the active substance and active moiety are different, therefore both a strength and a reference strength are needed.
# + concentrationIngredientRatioRange - The strength per unitary volume (or mass).
# + concentrationIngredientRatio - The strength per unitary volume (or mass).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + presentationIngredientQuantity - The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').
# + measurementPoint - For when strength is measured at a particular point or distance. There are products where strength is measured at a particular point. For example, the strength of the ingredient in some inhalers is measured at a particular position relative to the point of aerosolization.
# + presentationIngredientRatio - The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').
@r5:DataTypeDefinition {
    name: "IngredientSubstanceStrength",
    baseType: (),
    elements: {
        "concentrationIngredientCodeableConcept": {
            name: "concentrationIngredientCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The strength per unitary volume (or mass).",
            path: "Ingredient.substance.strength.concentration[x]"
        },
        "country": {
            name: "country",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The country or countries for which the strength range applies.",
            path: "Ingredient.substance.strength.country"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Ingredient.substance.strength.extension"
        },
        "textConcentration": {
            name: "textConcentration",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A textual represention of either the whole of the concentration strength or a part of it - with the rest being in Strength.concentration as a ratio.",
            path: "Ingredient.substance.strength.textConcentration"
        },
        "presentationIngredientRatioRange": {
            name: "presentationIngredientRatioRange",
            dataType: r5:RatioRange,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').",
            path: "Ingredient.substance.strength.presentation[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Ingredient.substance.strength.modifierExtension"
        },
        "presentationIngredientCodeableConcept": {
            name: "presentationIngredientCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').",
            path: "Ingredient.substance.strength.presentation[x]"
        },
        "basis": {
            name: "basis",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code that indicates if the strength is, for example, based on the ingredient substance as stated or on the substance base (when the ingredient is a salt).",
            path: "Ingredient.substance.strength.basis"
        },
        "concentrationIngredientQuantity": {
            name: "concentrationIngredientQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The strength per unitary volume (or mass).",
            path: "Ingredient.substance.strength.concentration[x]"
        },
        "textPresentation": {
            name: "textPresentation",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A textual represention of either the whole of the presentation strength or a part of it - with the rest being in Strength.presentation as a ratio.",
            path: "Ingredient.substance.strength.textPresentation"
        },
        "referenceStrength": {
            name: "referenceStrength",
            dataType: IngredientSubstanceStrengthReferenceStrength,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Strength expressed in terms of a reference substance. For when the ingredient strength is additionally expressed as equivalent to the strength of some other closely related substance (e.g. salt vs. base). Reference strength represents the strength (quantitative composition) of the active moiety of the active substance. There are situations when the active substance and active moiety are different, therefore both a strength and a reference strength are needed.",
            path: "Ingredient.substance.strength.referenceStrength"
        },
        "concentrationIngredientRatioRange": {
            name: "concentrationIngredientRatioRange",
            dataType: r5:RatioRange,
            min: 0,
            max: 1,
            isArray: false,
            description: "The strength per unitary volume (or mass).",
            path: "Ingredient.substance.strength.concentration[x]"
        },
        "concentrationIngredientRatio": {
            name: "concentrationIngredientRatio",
            dataType: r5:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "The strength per unitary volume (or mass).",
            path: "Ingredient.substance.strength.concentration[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Ingredient.substance.strength.id"
        },
        "presentationIngredientQuantity": {
            name: "presentationIngredientQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').",
            path: "Ingredient.substance.strength.presentation[x]"
        },
        "measurementPoint": {
            name: "measurementPoint",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "For when strength is measured at a particular point or distance. There are products where strength is measured at a particular point. For example, the strength of the ingredient in some inhalers is measured at a particular position relative to the point of aerosolization.",
            path: "Ingredient.substance.strength.measurementPoint"
        },
        "presentationIngredientRatio": {
            name: "presentationIngredientRatio",
            dataType: r5:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').",
            path: "Ingredient.substance.strength.presentation[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type IngredientSubstanceStrength record {|
    *r5:BackboneElement;

    r5:CodeableConcept concentrationIngredientCodeableConcept?;
    r5:CodeableConcept[] country?;
    r5:Extension[] extension?;
    string textConcentration?;
    r5:RatioRange presentationIngredientRatioRange?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept presentationIngredientCodeableConcept?;
    r5:CodeableConcept basis?;
    r5:Quantity concentrationIngredientQuantity?;
    string textPresentation?;
    IngredientSubstanceStrengthReferenceStrength[] referenceStrength?;
    r5:RatioRange concentrationIngredientRatioRange?;
    r5:Ratio concentrationIngredientRatio?;
    string id?;
    r5:Quantity presentationIngredientQuantity?;
    string measurementPoint?;
    r5:Ratio presentationIngredientRatio?;
|};

# IngredientManufacturerRole enum
public enum IngredientManufacturerRole {
   CODE_ROLE_ACTUAL = "actual",
   CODE_ROLE_ALLOWED = "allowed",
   CODE_ROLE_POSSIBLE = "possible"
}

