// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_CLINICALUSEDEFINITION = "http://hl7.org/fhir/StructureDefinition/ClinicalUseDefinition";
public const RESOURCE_NAME_CLINICALUSEDEFINITION = "ClinicalUseDefinition";

# FHIR ClinicalUseDefinition resource record.
#
# + resourceType - The type of the resource describes
# + identifier - Business identifier for this issue.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + subject - The medication, product, substance, device, procedure etc. for which this is an indication.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + 'type - indication | contraindication | interaction | undesirable-effect | warning.
# + population - The population group to which this applies.
# + undesirableEffect - Describe the possible undesirable effects (negative outcomes) from the use of the medicinal product as treatment.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + library - Logic used by the clinical use definition.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + interaction - Specifics for when this is an interaction.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + warning - A critical piece of information about environmental, health or physical risks or hazards that serve as caution to the user. For example 'Do not operate heavy machinery', 'May cause drowsiness', or 'Get medical advice/attention if you feel unwell'.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + indication - Specifics for when this is an indication.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + category - A categorisation of the issue, primarily for dividing warnings into subject heading areas such as 'Pregnancy and Lactation', 'Overdose', 'Effects on Ability to Drive and Use Machines'.
# + contraindication - Specifics for when this is a contraindication.
# + status - Whether this is a current issue or one that has been retired etc.
@r5:ResourceDefinition {
    resourceType: "ClinicalUseDefinition",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/ClinicalUseDefinition",
    elements: {
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClinicalUseDefinition.identifier"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClinicalUseDefinition.extension"
        },
        "subject" : {
            name: "subject",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClinicalUseDefinition.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClinicalUseDefinition.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "type" : {
            name: "type",
            dataType: ClinicalUseDefinitionType,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.type",
            valueSet: "http://hl7.org/fhir/ValueSet/clinical-use-definition-type|5.0.0"
        },
        "population" : {
            name: "population",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClinicalUseDefinition.population"
        },
        "undesirableEffect" : {
            name: "undesirableEffect",
            dataType: ClinicalUseDefinitionUndesirableEffect,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.undesirableEffect"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClinicalUseDefinition.contained"
        },
        "library" : {
            name: "library",
            dataType: r5:canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClinicalUseDefinition.library"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.meta"
        },
        "interaction" : {
            name: "interaction",
            dataType: ClinicalUseDefinitionInteraction,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.interaction"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.implicitRules"
        },
        "warning" : {
            name: "warning",
            dataType: ClinicalUseDefinitionWarning,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.warning"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.id"
        },
        "indication" : {
            name: "indication",
            dataType: ClinicalUseDefinitionIndication,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.indication"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.text"
        },
        "category" : {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClinicalUseDefinition.category",
            valueSet: "http://hl7.org/fhir/ValueSet/clinical-use-definition-category"
        },
        "contraindication" : {
            name: "contraindication",
            dataType: ClinicalUseDefinitionContraindication,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.contraindication"
        },
        "status" : {
            name: "status",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClinicalUseDefinition.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type ClinicalUseDefinition record {|
    *r5:DomainResource;

    RESOURCE_NAME_CLINICALUSEDEFINITION resourceType = RESOURCE_NAME_CLINICALUSEDEFINITION;

    r5:Identifier[] identifier?;
    r5:Extension[] extension?;
    r5:Reference[] subject?;
    r5:Extension[] modifierExtension?;
    r5:code language?;
    ClinicalUseDefinitionType 'type;
    r5:Reference[] population?;
    ClinicalUseDefinitionUndesirableEffect undesirableEffect?;
    r5:Resource[] contained?;
    r5:canonical[] library?;
    r5:Meta meta?;
    ClinicalUseDefinitionInteraction interaction?;
    r5:uri implicitRules?;
    ClinicalUseDefinitionWarning warning?;
    string id?;
    ClinicalUseDefinitionIndication indication?;
    r5:Narrative text?;
    r5:CodeableConcept[] category?;
    ClinicalUseDefinitionContraindication contraindication?;
    r5:CodeableConcept status?;
    r5:Element ...;
|};

# FHIR ClinicalUseDefinitionInteraction datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + management - Actions for managing the interaction.
# + effect - The effect of the interaction, for example 'reduced gastric absorption of primary medication'.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + interactant - The specific medication, product, food, substance etc. or laboratory test that interacts.
# + 'type - The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction.
# + incidence - The incidence of the interaction, e.g. theoretical, observed.
@r5:DataTypeDefinition {
    name: "ClinicalUseDefinitionInteraction",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClinicalUseDefinition.interaction.extension"
        },
        "management": {
            name: "management",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Actions for managing the interaction.",
            path: "ClinicalUseDefinition.interaction.management"
        },
        "effect": {
            name: "effect",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The effect of the interaction, for example 'reduced gastric absorption of primary medication'.",
            path: "ClinicalUseDefinition.interaction.effect"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClinicalUseDefinition.interaction.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClinicalUseDefinition.interaction.id"
        },
        "interactant": {
            name: "interactant",
            dataType: ClinicalUseDefinitionInteractionInteractant,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The specific medication, product, food, substance etc. or laboratory test that interacts.",
            path: "ClinicalUseDefinition.interaction.interactant"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction.",
            path: "ClinicalUseDefinition.interaction.type"
        },
        "incidence": {
            name: "incidence",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The incidence of the interaction, e.g. theoretical, observed.",
            path: "ClinicalUseDefinition.interaction.incidence"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClinicalUseDefinitionInteraction record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept[] management?;
    r5:CodeableReference effect?;
    r5:Extension[] modifierExtension?;
    string id?;
    ClinicalUseDefinitionInteractionInteractant[] interactant?;
    r5:CodeableConcept 'type?;
    r5:CodeableConcept incidence?;
|};

# FHIR ClinicalUseDefinitionUndesirableEffect datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + symptomConditionEffect - The situation in which the undesirable effect may manifest.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + classification - High level classification of the effect.
# + frequencyOfOccurrence - How often the effect is seen.
@r5:DataTypeDefinition {
    name: "ClinicalUseDefinitionUndesirableEffect",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClinicalUseDefinition.undesirableEffect.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClinicalUseDefinition.undesirableEffect.modifierExtension"
        },
        "symptomConditionEffect": {
            name: "symptomConditionEffect",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The situation in which the undesirable effect may manifest.",
            path: "ClinicalUseDefinition.undesirableEffect.symptomConditionEffect"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClinicalUseDefinition.undesirableEffect.id"
        },
        "classification": {
            name: "classification",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "High level classification of the effect.",
            path: "ClinicalUseDefinition.undesirableEffect.classification"
        },
        "frequencyOfOccurrence": {
            name: "frequencyOfOccurrence",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "How often the effect is seen.",
            path: "ClinicalUseDefinition.undesirableEffect.frequencyOfOccurrence"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClinicalUseDefinitionUndesirableEffect record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableReference symptomConditionEffect?;
    string id?;
    r5:CodeableConcept classification?;
    r5:CodeableConcept frequencyOfOccurrence?;
|};

# FHIR ClinicalUseDefinitionContraindication datatype record.
#
# + diseaseStatus - The status of the disease or symptom for the contraindication, for example 'chronic' or 'metastatic'.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + otherTherapy - Information about the use of the medicinal product in relation to other therapies described as part of the contraindication.
# + comorbidity - A comorbidity (concurrent condition) or coinfection.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + diseaseSymptomProcedure - The situation that is being documented as contraindicating against this item.
# + applicability - An expression that returns true or false, indicating whether the indication is applicable or not, after having applied its other elements.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + indication - The indication which this is a contraidication for.
@r5:DataTypeDefinition {
    name: "ClinicalUseDefinitionContraindication",
    baseType: (),
    elements: {
        "diseaseStatus": {
            name: "diseaseStatus",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The status of the disease or symptom for the contraindication, for example 'chronic' or 'metastatic'.",
            path: "ClinicalUseDefinition.contraindication.diseaseStatus"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClinicalUseDefinition.contraindication.extension"
        },
        "otherTherapy": {
            name: "otherTherapy",
            dataType: ClinicalUseDefinitionContraindicationOtherTherapy,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Information about the use of the medicinal product in relation to other therapies described as part of the contraindication.",
            path: "ClinicalUseDefinition.contraindication.otherTherapy"
        },
        "comorbidity": {
            name: "comorbidity",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A comorbidity (concurrent condition) or coinfection.",
            path: "ClinicalUseDefinition.contraindication.comorbidity"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClinicalUseDefinition.contraindication.modifierExtension"
        },
        "diseaseSymptomProcedure": {
            name: "diseaseSymptomProcedure",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The situation that is being documented as contraindicating against this item.",
            path: "ClinicalUseDefinition.contraindication.diseaseSymptomProcedure"
        },
        "applicability": {
            name: "applicability",
            dataType: r5:Expression,
            min: 0,
            max: 1,
            isArray: false,
            description: "An expression that returns true or false, indicating whether the indication is applicable or not, after having applied its other elements.",
            path: "ClinicalUseDefinition.contraindication.applicability"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClinicalUseDefinition.contraindication.id"
        },
        "indication": {
            name: "indication",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The indication which this is a contraidication for.",
            path: "ClinicalUseDefinition.contraindication.indication"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClinicalUseDefinitionContraindication record {|
    *r5:BackboneElement;

    r5:CodeableReference diseaseStatus?;
    r5:Extension[] extension?;
    ClinicalUseDefinitionContraindicationOtherTherapy[] otherTherapy?;
    r5:CodeableReference[] comorbidity?;
    r5:Extension[] modifierExtension?;
    r5:CodeableReference diseaseSymptomProcedure?;
    r5:Expression applicability?;
    string id?;
    r5:Reference[] indication?;
|};

# FHIR ClinicalUseDefinitionContraindicationOtherTherapy datatype record.
#
# + treatment - Reference to a specific medication (active substance, medicinal product or class of products, biological, food etc.) as part of an indication or contraindication.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + relationshipType - The type of relationship between the medicinal product indication or contraindication and another therapy.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ClinicalUseDefinitionContraindicationOtherTherapy",
    baseType: (),
    elements: {
        "treatment": {
            name: "treatment",
            dataType: r5:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to a specific medication (active substance, medicinal product or class of products, biological, food etc.) as part of an indication or contraindication.",
            path: "ClinicalUseDefinition.contraindication.otherTherapy.treatment"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClinicalUseDefinition.contraindication.otherTherapy.extension"
        },
        "relationshipType": {
            name: "relationshipType",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of relationship between the medicinal product indication or contraindication and another therapy.",
            path: "ClinicalUseDefinition.contraindication.otherTherapy.relationshipType"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClinicalUseDefinition.contraindication.otherTherapy.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClinicalUseDefinition.contraindication.otherTherapy.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClinicalUseDefinitionContraindicationOtherTherapy record {|
    *r5:BackboneElement;

    r5:CodeableReference treatment;
    r5:Extension[] extension?;
    r5:CodeableConcept relationshipType;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# ClinicalUseDefinitionType enum
public enum ClinicalUseDefinitionType {
   CODE_TYPE_INTERACTION = "interaction",
   CODE_TYPE_WARNING = "warning",
   CODE_TYPE_INDICATION = "indication",
   CODE_TYPE_UNDESIRABLE_EFFECT = "undesirable-effect",
   CODE_TYPE_CONTRAINDICATION = "contraindication"
}

# FHIR ClinicalUseDefinitionIndication datatype record.
#
# + diseaseStatus - The status of the disease or symptom for the indication, for example 'chronic' or 'metastatic'.
# + undesirableEffect - An unwanted side effect or negative outcome that may happen if you use the drug (or other subject of this resource) for this indication.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + comorbidity - A comorbidity (concurrent condition) or coinfection as part of the indication.
# + intendedEffect - The intended effect, aim or strategy to be achieved.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + diseaseSymptomProcedure - The situation that is being documented as an indicaton for this item.
# + applicability - An expression that returns true or false, indicating whether the indication is applicable or not, after having applied its other elements.
# + durationRange - Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + durationString - Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months).
@r5:DataTypeDefinition {
    name: "ClinicalUseDefinitionIndication",
    baseType: (),
    elements: {
        "diseaseStatus": {
            name: "diseaseStatus",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The status of the disease or symptom for the indication, for example 'chronic' or 'metastatic'.",
            path: "ClinicalUseDefinition.indication.diseaseStatus"
        },
        "undesirableEffect": {
            name: "undesirableEffect",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An unwanted side effect or negative outcome that may happen if you use the drug (or other subject of this resource) for this indication.",
            path: "ClinicalUseDefinition.indication.undesirableEffect"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClinicalUseDefinition.indication.extension"
        },
        "comorbidity": {
            name: "comorbidity",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A comorbidity (concurrent condition) or coinfection as part of the indication.",
            path: "ClinicalUseDefinition.indication.comorbidity"
        },
        "intendedEffect": {
            name: "intendedEffect",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The intended effect, aim or strategy to be achieved.",
            path: "ClinicalUseDefinition.indication.intendedEffect"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClinicalUseDefinition.indication.modifierExtension"
        },
        "diseaseSymptomProcedure": {
            name: "diseaseSymptomProcedure",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The situation that is being documented as an indicaton for this item.",
            path: "ClinicalUseDefinition.indication.diseaseSymptomProcedure"
        },
        "applicability": {
            name: "applicability",
            dataType: r5:Expression,
            min: 0,
            max: 1,
            isArray: false,
            description: "An expression that returns true or false, indicating whether the indication is applicable or not, after having applied its other elements.",
            path: "ClinicalUseDefinition.indication.applicability"
        },
        "durationRange": {
            name: "durationRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months).",
            path: "ClinicalUseDefinition.indication.duration[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClinicalUseDefinition.indication.id"
        },
        "durationString": {
            name: "durationString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months).",
            path: "ClinicalUseDefinition.indication.duration[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClinicalUseDefinitionIndication record {|
    *r5:BackboneElement;

    r5:CodeableReference diseaseStatus?;
    r5:Reference[] undesirableEffect?;
    r5:Extension[] extension?;
    r5:CodeableReference[] comorbidity?;
    r5:CodeableReference intendedEffect?;
    r5:Extension[] modifierExtension?;
    r5:CodeableReference diseaseSymptomProcedure?;
    r5:Expression applicability?;
    r5:Range durationRange?;
    string id?;
    string durationString?;
|};

# FHIR ClinicalUseDefinitionInteractionInteractant datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + itemClinicalUseDefinitionReference - The specific medication, product, food, substance etc. or laboratory test that interacts.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + itemClinicalUseDefinitionCodeableConcept - The specific medication, product, food, substance etc. or laboratory test that interacts.
@r5:DataTypeDefinition {
    name: "ClinicalUseDefinitionInteractionInteractant",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClinicalUseDefinition.interaction.interactant.extension"
        },
        "itemClinicalUseDefinitionReference": {
            name: "itemClinicalUseDefinitionReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The specific medication, product, food, substance etc. or laboratory test that interacts.",
            path: "ClinicalUseDefinition.interaction.interactant.item[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClinicalUseDefinition.interaction.interactant.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClinicalUseDefinition.interaction.interactant.id"
        },
        "itemClinicalUseDefinitionCodeableConcept": {
            name: "itemClinicalUseDefinitionCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The specific medication, product, food, substance etc. or laboratory test that interacts.",
            path: "ClinicalUseDefinition.interaction.interactant.item[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClinicalUseDefinitionInteractionInteractant record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Reference itemClinicalUseDefinitionReference;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept itemClinicalUseDefinitionCodeableConcept;
|};

# FHIR ClinicalUseDefinitionWarning datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A coded or unformatted textual definition of this warning.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - A textual definition of this warning, with formatting.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ClinicalUseDefinitionWarning",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClinicalUseDefinition.warning.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded or unformatted textual definition of this warning.",
            path: "ClinicalUseDefinition.warning.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClinicalUseDefinition.warning.modifierExtension"
        },
        "description": {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A textual definition of this warning, with formatting.",
            path: "ClinicalUseDefinition.warning.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClinicalUseDefinition.warning.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClinicalUseDefinitionWarning record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept code?;
    r5:Extension[] modifierExtension?;
    r5:markdown description?;
    string id?;
|};

