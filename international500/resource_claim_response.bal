// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_CLAIMRESPONSE = "http://hl7.org/fhir/StructureDefinition/ClaimResponse";
public const RESOURCE_NAME_CLAIMRESPONSE = "ClaimResponse";

# FHIR ClaimResponse resource record.
#
# + resourceType - The type of the resource describes
# + insurance - Financial instruments for reimbursement for the health care products and services specified on the claim.
# + request - Original request resource reference.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + use - A code to indicate whether the nature of the request is: Claim - A request to an Insurer to adjudicate the supplied charges for health care goods and services under the identified policy and to pay the determined Benefit amount, if any; Preauthorization - A request to an Insurer to adjudicate the supplied proposed future charges for health care goods and services under the identified policy and to approve the services and provide the expected benefit amounts and potentially to reserve funds to pay the benefits when Claims for the indicated services are later submitted; or, Pre-determination - A request to an Insurer to adjudicate the supplied 'what if' charges for health care goods and services under the identified policy and report back what the Benefit payable would be had the services actually been provided.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + payeeType - Type of Party to be reimbursed: subscriber, provider, other.
# + preAuthRef - Reference from the Insurer which is used in later communications which refers to this adjudication.
# + language - The base language in which the resource is written.
# + diagnosisRelatedGroup - A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.
# + 'error - Errors encountered during the processing of the adjudication.
# + 'type - A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.
# + processNote - A note that describes or explains adjudication results in a human readable form.
# + addItem - The first-tier service adjudications for payor added product or service lines.
# + total - Categorized monetary totals for the adjudication.
# + fundsReserve - A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.
# + insurer - The party responsible for authorization, adjudication and reimbursement.
# + patient - The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for facast reimbursement is sought.
# + communicationRequest - Request for additional supporting or authorizing information.
# + payment - Payment details for the adjudication of the claim.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + event - Information code for an event with a corresponding date or period.
# + outcome - The outcome of the claim, predetermination, or preauthorization processing.
# + identifier - A unique identifier assigned to this claim response.
# + item - A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.
# + preAuthPeriod - The time frame during which this authorization is effective.
# + decision - The result of the claim, predetermination, or preauthorization adjudication.
# + formCode - A code for the form to be used for printing the content.
# + created - The date this resource was created.
# + encounter - Healthcare encounters related to this claim.
# + requestor - The provider which is responsible for the claim, predetermination or preauthorization.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + disposition - A human readable description of the status of the adjudication.
# + form - The actual form, by reference or inclusion, for printing the content or an EOB.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + subType - A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.
# + status - The status of the resource instance.
@r5:ResourceDefinition {
    resourceType: "ClaimResponse",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/ClaimResponse",
    elements: {
        "insurance" : {
            name: "insurance",
            dataType: ClaimResponseInsurance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.insurance"
        },
        "request" : {
            name: "request",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.request"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.extension"
        },
        "traceNumber" : {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.traceNumber"
        },
        "use" : {
            name: "use",
            dataType: ClaimResponseUse,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.use",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-use|5.0.0"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.modifierExtension"
        },
        "payeeType" : {
            name: "payeeType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.payeeType",
            valueSet: "http://hl7.org/fhir/ValueSet/payeetype"
        },
        "preAuthRef" : {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.preAuthRef"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "diagnosisRelatedGroup" : {
            name: "diagnosisRelatedGroup",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.diagnosisRelatedGroup",
            valueSet: "http://hl7.org/fhir/ValueSet/ex-diagnosisrelatedgroup"
        },
        "error" : {
            name: "error",
            dataType: ClaimResponseError,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.error"
        },
        "type" : {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.type",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-type"
        },
        "processNote" : {
            name: "processNote",
            dataType: ClaimResponseProcessNote,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.processNote"
        },
        "addItem" : {
            name: "addItem",
            dataType: ClaimResponseAddItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.addItem"
        },
        "total" : {
            name: "total",
            dataType: ClaimResponseTotal,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.total"
        },
        "fundsReserve" : {
            name: "fundsReserve",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.fundsReserve",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },
        "insurer" : {
            name: "insurer",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.insurer"
        },
        "patient" : {
            name: "patient",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.patient"
        },
        "communicationRequest" : {
            name: "communicationRequest",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.communicationRequest"
        },
        "payment" : {
            name: "payment",
            dataType: ClaimResponsePayment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.payment"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.text"
        },
        "event" : {
            name: "event",
            dataType: ClaimResponseEvent,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.event"
        },
        "outcome" : {
            name: "outcome",
            dataType: ClaimResponseOutcome,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.outcome",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-outcome|5.0.0"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.identifier"
        },
        "item" : {
            name: "item",
            dataType: ClaimResponseItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.item"
        },
        "preAuthPeriod" : {
            name: "preAuthPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.preAuthPeriod"
        },
        "decision" : {
            name: "decision",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.decision",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-decision"
        },
        "formCode" : {
            name: "formCode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.formCode",
            valueSet: "http://hl7.org/fhir/ValueSet/forms"
        },
        "created" : {
            name: "created",
            dataType: r5:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.created"
        },
        "encounter" : {
            name: "encounter",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.encounter"
        },
        "requestor" : {
            name: "requestor",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.requestor"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.contained"
        },
        "disposition" : {
            name: "disposition",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.disposition"
        },
        "form" : {
            name: "form",
            dataType: r5:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.form"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.implicitRules"
        },
        "subType" : {
            name: "subType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.subType",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-subtype"
        },
        "status" : {
            name: "status",
            dataType: ClaimResponseStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.status",
            valueSet: "http://hl7.org/fhir/ValueSet/fm-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type ClaimResponse record {|
    *r5:DomainResource;

    RESOURCE_NAME_CLAIMRESPONSE resourceType = RESOURCE_NAME_CLAIMRESPONSE;

    ClaimResponseInsurance[] insurance?;
    r5:Reference request?;
    r5:Extension[] extension?;
    r5:Identifier[] traceNumber?;
    ClaimResponseUse use;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept payeeType?;
    string preAuthRef?;
    r5:code language?;
    r5:CodeableConcept diagnosisRelatedGroup?;
    ClaimResponseError[] 'error?;
    r5:CodeableConcept 'type;
    ClaimResponseProcessNote[] processNote?;
    ClaimResponseAddItem[] addItem?;
    ClaimResponseTotal[] total?;
    r5:CodeableConcept fundsReserve?;
    r5:Reference insurer?;
    r5:Reference patient;
    r5:Reference[] communicationRequest?;
    ClaimResponsePayment payment?;
    string id?;
    r5:Narrative text?;
    ClaimResponseEvent[] event?;
    ClaimResponseOutcome outcome;
    r5:Identifier[] identifier?;
    ClaimResponseItem[] item?;
    r5:Period preAuthPeriod?;
    r5:CodeableConcept decision?;
    r5:CodeableConcept formCode?;
    r5:dateTime created;
    r5:Reference[] encounter?;
    r5:Reference requestor?;
    r5:Resource[] contained?;
    string disposition?;
    r5:Attachment form?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    r5:CodeableConcept subType?;
    ClaimResponseStatus status;
    r5:Element ...;
|};

# FHIR ClaimResponseError datatype record.
#
# + subDetailSequence - The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.
# + itemSequence - The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - An error code, from a specified code system, which details why the claim could not be adjudicated.
# + expression - A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.
# + detailSequence - The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ClaimResponseError",
    baseType: (),
    elements: {
        "subDetailSequence": {
            name: "subDetailSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
            path: "ClaimResponse.error.subDetailSequence"
        },
        "itemSequence": {
            name: "itemSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
            path: "ClaimResponse.error.itemSequence"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.error.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "An error code, from a specified code system, which details why the claim could not be adjudicated.",
            path: "ClaimResponse.error.code"
        },
        "expression": {
            name: "expression",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
            path: "ClaimResponse.error.expression"
        },
        "detailSequence": {
            name: "detailSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
            path: "ClaimResponse.error.detailSequence"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.error.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.error.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseError record {|
    *r5:BackboneElement;

    r5:positiveInt subDetailSequence?;
    r5:positiveInt itemSequence?;
    r5:Extension[] extension?;
    r5:CodeableConcept code;
    string[] expression?;
    r5:positiveInt detailSequence?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR ClaimResponsePayment datatype record.
#
# + date - Estimated date the payment will be issued or the actual issue date of payment.
# + identifier - Issuer's unique identifier for the payment instrument.
# + adjustmentReason - Reason for the payment adjustment.
# + amount - Benefits payable less any payment adjustment.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + adjustment - Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Whether this represents partial or complete payment of the benefits payable.
@r5:DataTypeDefinition {
    name: "ClaimResponsePayment",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated date the payment will be issued or the actual issue date of payment.",
            path: "ClaimResponse.payment.date"
        },
        "identifier": {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Issuer's unique identifier for the payment instrument.",
            path: "ClaimResponse.payment.identifier"
        },
        "adjustmentReason": {
            name: "adjustmentReason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reason for the payment adjustment.",
            path: "ClaimResponse.payment.adjustmentReason"
        },
        "amount": {
            name: "amount",
            dataType: r5:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Benefits payable less any payment adjustment.",
            path: "ClaimResponse.payment.amount"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.payment.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.payment.modifierExtension"
        },
        "adjustment": {
            name: "adjustment",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
            path: "ClaimResponse.payment.adjustment"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.payment.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Whether this represents partial or complete payment of the benefits payable.",
            path: "ClaimResponse.payment.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponsePayment record {|
    *r5:BackboneElement;

    r5:date date?;
    r5:Identifier identifier?;
    r5:CodeableConcept adjustmentReason?;
    r5:Money amount;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Money adjustment?;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR ClaimResponseItem datatype record.
#
# + adjudication - If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.
# + itemSequence - A number to uniquely reference the claim item entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + reviewOutcome - The high-level results of the adjudication if adjudication has been performed.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + detail - A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
@r5:DataTypeDefinition {
    name: "ClaimResponseItem",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: ClaimResponseItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
            path: "ClaimResponse.item.adjudication"
        },
        "itemSequence": {
            name: "itemSequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely reference the claim item entries.",
            path: "ClaimResponse.item.itemSequence"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.item.extension"
        },
        "reviewOutcome": {
            name: "reviewOutcome",
            dataType: ClaimResponseItemReviewOutcome,
            min: 0,
            max: 1,
            isArray: false,
            description: "The high-level results of the adjudication if adjudication has been performed.",
            path: "ClaimResponse.item.reviewOutcome"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ClaimResponse.item.traceNumber"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.modifierExtension"
        },
        "detail": {
            name: "detail",
            dataType: ClaimResponseItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "ClaimResponse.item.detail"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.id"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.item.noteNumber"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseItem record {|
    *r5:BackboneElement;

    ClaimResponseItemAdjudication[] adjudication?;
    r5:positiveInt itemSequence;
    r5:Extension[] extension?;
    ClaimResponseItemReviewOutcome reviewOutcome?;
    r5:Identifier[] traceNumber?;
    r5:Extension[] modifierExtension?;
    ClaimResponseItemDetail[] detail?;
    string id?;
    r5:positiveInt[] noteNumber?;
|};

# FHIR ClaimResponseItemAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.
@r5:DataTypeDefinition {
    name: "ClaimResponseItemAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ClaimResponse.item.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ClaimResponse.item.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.item.adjudication.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ClaimResponse.item.adjudication.quantity"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.",
            path: "ClaimResponse.item.adjudication.category"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseItemAdjudication record {|
    *r5:BackboneElement;

    r5:CodeableConcept reason?;
    r5:Money amount?;
    r5:Extension[] extension?;
    r5:Quantity quantity?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept category;
|};

# FHIR ClaimResponseProcessNote datatype record.
#
# + number - A number to uniquely identify a note entry.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - A code to define the language used in the text of the note.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - The explanation or description associated with the processing.
# + 'type - The business purpose of the note text.
@r5:DataTypeDefinition {
    name: "ClaimResponseProcessNote",
    baseType: (),
    elements: {
        "number": {
            name: "number",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify a note entry.",
            path: "ClaimResponse.processNote.number"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.processNote.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.processNote.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code to define the language used in the text of the note.",
            path: "ClaimResponse.processNote.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.processNote.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The explanation or description associated with the processing.",
            path: "ClaimResponse.processNote.text"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The business purpose of the note text.",
            path: "ClaimResponse.processNote.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseProcessNote record {|
    *r5:BackboneElement;

    r5:positiveInt number?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept language?;
    string id?;
    string text;
    r5:CodeableConcept 'type?;
|};

# FHIR ClaimResponseAddItem datatype record.
#
# + request - Request or Referral for Goods or Service to be rendered.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subdetailSequence - The sequence number of the sub-details within the details within the claim item which this line is intended to replace.
# + locationAddress - Where the product or service was provided.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + itemSequence - Claim items which this service line is intended to replace.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + locationCodeableConcept - Where the product or service was provided.
# + provider - The providers who are authorized for the services rendered to the patient.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationReference - Where the product or service was provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the group (if a grouper) or the addItem. Net = unit price * quantity * factor.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + tax - The total of taxes applicable for this product or service.
# + bodySite - Physical location where the service is performed or applies.
# + detailSequence - The sequence number of the details within the claim item which this line is intended to replace.
# + detail - The second-tier service adjudications for payor added services.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
@r5:DataTypeDefinition {
    name: "ClaimResponseAddItem",
    baseType: (),
    elements: {
        "request": {
            name: "request",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Request or Referral for Goods or Service to be rendered.",
            path: "ClaimResponse.addItem.request"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.addItem.extension"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ClaimResponse.addItem.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ClaimResponse.addItem.traceNumber"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ClaimResponse.addItem.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.addItem.modifierExtension"
        },
        "subdetailSequence": {
            name: "subdetailSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the sub-details within the details within the claim item which this line is intended to replace.",
            path: "ClaimResponse.addItem.subdetailSequence"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r5:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ClaimResponse.addItem.location[x]"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ClaimResponse.addItem.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.addItem.noteNumber"
        },
        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ClaimResponse.addItem.serviced[x]"
        },
        "itemSequence": {
            name: "itemSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Claim items which this service line is intended to replace.",
            path: "ClaimResponse.addItem.itemSequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ClaimResponse.addItem.revenue"
        },
        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ClaimResponse.addItem.location[x]"
        },
        "provider": {
            name: "provider",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The providers who are authorized for the services rendered to the patient.",
            path: "ClaimResponse.addItem.provider"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.id"
        },
        "locationReference": {
            name: "locationReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ClaimResponse.addItem.location[x]"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ClaimResponse.addItem.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the group (if a grouper) or the addItem. Net = unit price * quantity * factor.",
            path: "ClaimResponse.addItem.net"
        },
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ClaimResponse.addItem.unitPrice"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ClaimResponse.addItem.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ClaimResponse.addItem.programCode"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ClaimResponse.addItem.tax"
        },
        "bodySite": {
            name: "bodySite",
            dataType: ClaimResponseAddItemBodySite,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Physical location where the service is performed or applies.",
            path: "ClaimResponse.addItem.bodySite"
        },
        "detailSequence": {
            name: "detailSequence",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the details within the claim item which this line is intended to replace.",
            path: "ClaimResponse.addItem.detailSequence"
        },
        "detail": {
            name: "detail",
            dataType: ClaimResponseAddItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The second-tier service adjudications for payor added services.",
            path: "ClaimResponse.addItem.detail"
        },
        "servicedDate": {
            name: "servicedDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ClaimResponse.addItem.serviced[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseAddItem record {|
    *r5:BackboneElement;

    r5:Reference[] request?;
    r5:Extension[] extension?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    r5:positiveInt[] subdetailSequence?;
    r5:Address locationAddress?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:Period servicedPeriod?;
    r5:positiveInt[] itemSequence?;
    r5:CodeableConcept revenue?;
    r5:CodeableConcept locationCodeableConcept?;
    r5:Reference[] provider?;
    string id?;
    r5:Reference locationReference?;
    decimal factor?;
    r5:Money net?;
    r5:Money unitPrice?;
    r5:Quantity quantity?;
    r5:CodeableConcept[] programCode?;
    r5:Money tax?;
    ClaimResponseAddItemBodySite[] bodySite?;
    r5:positiveInt[] detailSequence?;
    ClaimResponseAddItemDetail[] detail?;
    r5:date servicedDate?;
|};

# FHIR ClaimResponseAddItemDetailSubDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + tax - The total of taxes applicable for this product or service.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the addItem.detail.subDetail. Net = unit price * quantity * factor.
@r5:DataTypeDefinition {
    name: "ClaimResponseAddItemDetailSubDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ClaimResponse.addItem.detail.subDetail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.addItem.detail.subDetail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ClaimResponse.addItem.detail.subDetail.quantity"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ClaimResponse.addItem.detail.subDetail.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ClaimResponse.addItem.detail.subDetail.traceNumber"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ClaimResponse.addItem.detail.subDetail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.addItem.detail.subDetail.modifierExtension"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ClaimResponse.addItem.detail.subDetail.tax"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ClaimResponse.addItem.detail.subDetail.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.addItem.detail.subDetail.noteNumber"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ClaimResponse.addItem.detail.subDetail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.detail.subDetail.id"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ClaimResponse.addItem.detail.subDetail.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the addItem.detail.subDetail. Net = unit price * quantity * factor.",
            path: "ClaimResponse.addItem.detail.subDetail.net"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseAddItemDetailSubDetail record {|
    *r5:BackboneElement;

    r5:Money unitPrice?;
    r5:Extension[] extension?;
    r5:Quantity quantity?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    r5:Money tax?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:CodeableConcept revenue?;
    string id?;
    decimal factor?;
    r5:Money net?;
|};

# ClaimResponseStatus enum
public enum ClaimResponseStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_CANCELLED = "cancelled",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR ClaimResponseItemDetail datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + detailSequence - A number to uniquely reference the claim detail entry.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - A sub-detail adjudication of a simple product or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
@r5:DataTypeDefinition {
    name: "ClaimResponseItemDetail",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.item.detail.extension"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ClaimResponse.item.detail.traceNumber"
        },
        "detailSequence": {
            name: "detailSequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely reference the claim detail entry.",
            path: "ClaimResponse.item.detail.detailSequence"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.detail.modifierExtension"
        },
        "subDetail": {
            name: "subDetail",
            dataType: ClaimResponseItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A sub-detail adjudication of a simple product or service.",
            path: "ClaimResponse.item.detail.subDetail"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.detail.id"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.item.detail.noteNumber"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseItemDetail record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Identifier[] traceNumber?;
    r5:positiveInt detailSequence;
    r5:Extension[] modifierExtension?;
    ClaimResponseItemDetailSubDetail[] subDetail?;
    string id?;
    r5:positiveInt[] noteNumber?;
|};

# FHIR ClaimResponseItemReviewOutcome datatype record.
#
# + reason - The reasons for the result of the claim, predetermination, or preauthorization adjudication.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + preAuthPeriod - The time frame during which this authorization is effective.
# + decision - The result of the claim, predetermination, or preauthorization adjudication.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference from the Insurer which is used in later communications which refers to this adjudication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ClaimResponseItemReviewOutcome",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The reasons for the result of the claim, predetermination, or preauthorization adjudication.",
            path: "ClaimResponse.item.reviewOutcome.reason"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.item.reviewOutcome.extension"
        },
        "preAuthPeriod": {
            name: "preAuthPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The time frame during which this authorization is effective.",
            path: "ClaimResponse.item.reviewOutcome.preAuthPeriod"
        },
        "decision": {
            name: "decision",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The result of the claim, predetermination, or preauthorization adjudication.",
            path: "ClaimResponse.item.reviewOutcome.decision"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.reviewOutcome.modifierExtension"
        },
        "preAuthRef": {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference from the Insurer which is used in later communications which refers to this adjudication.",
            path: "ClaimResponse.item.reviewOutcome.preAuthRef"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.reviewOutcome.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseItemReviewOutcome record {|
    *r5:BackboneElement;

    r5:CodeableConcept[] reason?;
    r5:Extension[] extension?;
    r5:Period preAuthPeriod?;
    r5:CodeableConcept decision?;
    r5:Extension[] modifierExtension?;
    string preAuthRef?;
    string id?;
|};

# ClaimResponseOutcome enum
public enum ClaimResponseOutcome {
   CODE_OUTCOME_QUEUED = "queued",
   CODE_OUTCOME_COMPLETE = "complete",
   CODE_OUTCOME_ERROR = "error",
   CODE_OUTCOME_PARTIAL = "partial"
}

# FHIR ClaimResponseEvent datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + whenDateTime - A date or period in the past or future indicating when the event occurred or is expectd to occur.
# + whenPeriod - A date or period in the past or future indicating when the event occurred or is expectd to occur.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded event such as when a service is expected or a card printed.
@r5:DataTypeDefinition {
    name: "ClaimResponseEvent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.event.extension"
        },
        "whenDateTime": {
            name: "whenDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "A date or period in the past or future indicating when the event occurred or is expectd to occur.",
            path: "ClaimResponse.event.when[x]"
        },
        "whenPeriod": {
            name: "whenPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "A date or period in the past or future indicating when the event occurred or is expectd to occur.",
            path: "ClaimResponse.event.when[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.event.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.event.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded event such as when a service is expected or a card printed.",
            path: "ClaimResponse.event.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseEvent record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:dateTime whenDateTime;
    r5:Period whenPeriod;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR ClaimResponseItemDetailSubDetail datatype record.
#
# + subDetailSequence - A number to uniquely reference the claim sub-detail entry.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
@r5:DataTypeDefinition {
    name: "ClaimResponseItemDetailSubDetail",
    baseType: (),
    elements: {
        "subDetailSequence": {
            name: "subDetailSequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely reference the claim sub-detail entry.",
            path: "ClaimResponse.item.detail.subDetail.subDetailSequence"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.item.detail.subDetail.extension"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ClaimResponse.item.detail.subDetail.traceNumber"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.detail.subDetail.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.detail.subDetail.id"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.item.detail.subDetail.noteNumber"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseItemDetailSubDetail record {|
    *r5:BackboneElement;

    r5:positiveInt subDetailSequence;
    r5:Extension[] extension?;
    r5:Identifier[] traceNumber?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:positiveInt[] noteNumber?;
|};

# FHIR ClaimResponseInsurance datatype record.
#
# + coverage - Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.
# + sequence - A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + businessArrangement - A business agreement number established between the provider and the insurer for special business processing purposes.
# + claimResponse - The result of the adjudication of the line items for the Coverage specified in this insurance.
# + focal - A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ClaimResponseInsurance",
    baseType: (),
    elements: {
        "coverage": {
            name: "coverage",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
            path: "ClaimResponse.insurance.coverage"
        },
        "sequence": {
            name: "sequence",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
            path: "ClaimResponse.insurance.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.insurance.extension"
        },
        "businessArrangement": {
            name: "businessArrangement",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A business agreement number established between the provider and the insurer for special business processing purposes.",
            path: "ClaimResponse.insurance.businessArrangement"
        },
        "claimResponse": {
            name: "claimResponse",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The result of the adjudication of the line items for the Coverage specified in this insurance.",
            path: "ClaimResponse.insurance.claimResponse"
        },
        "focal": {
            name: "focal",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
            path: "ClaimResponse.insurance.focal"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.insurance.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.insurance.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseInsurance record {|
    *r5:BackboneElement;

    r5:Reference coverage;
    r5:positiveInt sequence;
    r5:Extension[] extension?;
    string businessArrangement?;
    r5:Reference claimResponse?;
    boolean focal;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR ClaimResponseAddItemBodySite datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + site - Physical service site on the patient (limb, tooth, etc.).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ClaimResponseAddItemBodySite",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.addItem.bodySite.extension"
        },
        "site": {
            name: "site",
            dataType: r5:CodeableReference,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "ClaimResponse.addItem.bodySite.site"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.addItem.bodySite.modifierExtension"
        },
        "subSite": {
            name: "subSite",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "ClaimResponse.addItem.bodySite.subSite"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.bodySite.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseAddItemBodySite record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.bodySite.site constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.bodySite.site constraint. This field must be an array containing at most one item."
        }
    }
    r5:CodeableReference[] site;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] subSite?;
    string id?;
|};

# FHIR ClaimResponseAddItemDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + productOrServiceEnd - This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.
# + traceNumber - Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - The third-tier service adjudications for payor added services.
# + tax - The total of taxes applicable for this product or service.
# + productOrService - When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The total amount claimed for the group (if a grouper) or the addItem.detail. Net = unit price * quantity * factor.
@r5:DataTypeDefinition {
    name: "ClaimResponseAddItemDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ClaimResponse.addItem.detail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.addItem.detail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ClaimResponse.addItem.detail.quantity"
        },
        "productOrServiceEnd": {
            name: "productOrServiceEnd",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contains the end of a range of product, service, drug or other billing codes for the item. This element is not used when the .productOrService is a group code. This value may only be present when a .productOfService code has been provided to convey the start of the range. Typically this value may be used only with preauthorizations and not with claims.",
            path: "ClaimResponse.addItem.detail.productOrServiceEnd"
        },
        "traceNumber": {
            name: "traceNumber",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Trace number for tracking purposes. May be defined at the jurisdiction level or between trading partners.",
            path: "ClaimResponse.addItem.detail.traceNumber"
        },
        "modifier": {
            name: "modifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ClaimResponse.addItem.detail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.addItem.detail.modifierExtension"
        },
        "subDetail": {
            name: "subDetail",
            dataType: ClaimResponseAddItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The third-tier service adjudications for payor added services.",
            path: "ClaimResponse.addItem.detail.subDetail"
        },
        "tax": {
            name: "tax",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total of taxes applicable for this product or service.",
            path: "ClaimResponse.addItem.detail.tax"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related item details, otherwise this contains the product, service, drug or other billing code for the item. This element may be the start of a range of .productOrService codes used in conjunction with .productOrServiceEnd or it may be a solo element where .productOrServiceEnd is not used.",
            path: "ClaimResponse.addItem.detail.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.addItem.detail.noteNumber"
        },
        "revenue": {
            name: "revenue",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ClaimResponse.addItem.detail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.detail.id"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ClaimResponse.addItem.detail.factor"
        },
        "net": {
            name: "net",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The total amount claimed for the group (if a grouper) or the addItem.detail. Net = unit price * quantity * factor.",
            path: "ClaimResponse.addItem.detail.net"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseAddItemDetail record {|
    *r5:BackboneElement;

    r5:Money unitPrice?;
    r5:Extension[] extension?;
    r5:Quantity quantity?;
    r5:CodeableConcept productOrServiceEnd?;
    r5:Identifier[] traceNumber?;
    r5:CodeableConcept[] modifier?;
    r5:Extension[] modifierExtension?;
    ClaimResponseAddItemDetailSubDetail[] subDetail?;
    r5:Money tax?;
    r5:CodeableConcept productOrService?;
    r5:positiveInt[] noteNumber?;
    r5:CodeableConcept revenue?;
    string id?;
    decimal factor?;
    r5:Money net?;
|};

# FHIR ClaimResponseTotal datatype record.
#
# + amount - Monetary total amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
@r5:DataTypeDefinition {
    name: "ClaimResponseTotal",
    baseType: (),
    elements: {
        "amount": {
            name: "amount",
            dataType: r5:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Monetary total amount associated with the category.",
            path: "ClaimResponse.total.amount"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.total.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.total.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.total.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ClaimResponse.total.category"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ClaimResponseTotal record {|
    *r5:BackboneElement;

    r5:Money amount;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept category;
|};

# ClaimResponseUse enum
public enum ClaimResponseUse {
   CODE_USE_PREDETERMINATION = "predetermination",
   CODE_USE_PREAUTHORIZATION = "preauthorization",
   CODE_USE_CLAIM = "claim"
}

