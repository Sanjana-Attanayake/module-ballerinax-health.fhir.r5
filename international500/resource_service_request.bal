// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_SERVICEREQUEST = "http://hl7.org/fhir/StructureDefinition/ServiceRequest";
public const RESOURCE_NAME_SERVICEREQUEST = "ServiceRequest";

# FHIR ServiceRequest resource record.
#
# + resourceType - The type of the resource describes
# + insurance - Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service.
# + note - Any other notes and comments made about the service request. For example, internal billing notes.
# + reason - An explanation or justification for why this service is being requested in coded or textual form. This is often for billing purposes. May relate to the resources referred to in `supportingInfo`.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code or reference that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that have been requested.
# + requisition - A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier.
# + subject - On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + focus - The actual focus of a service request when it is not the subject of record representing something or someone associated with the subject such as a spouse, parent, fetus, or donor. The focus of a service request could also be an existing condition, an intervention, the subject's diet, another service request on the subject, or a body structure such as tumor or implanted device.
# + language - The base language in which the resource is written.
# + instantiatesUri - The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.
# + relevantHistory - Key events in the history of the request.
# + supportingInfo - Additional clinical information about the patient or specimen that may influence the services or their interpretations. This information includes diagnosis, clinical findings and other observations. In laboratory ordering these are typically referred to as 'ask at order entry questions (AOEs)'. This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example, reporting the amount of inspired oxygen for blood gas measurements.
# + specimen - One or more specimens that the laboratory procedure will use.
# + quantityQuantity - An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).
# + quantityRatio - An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).
# + asNeededBoolean - If a CodeableConcept is present, it indicates the pre-condition for performing the service. For example 'pain', 'on flare-up', etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + doNotPerform - Set this to true if the record is saying that the service/procedure should NOT be performed.
# + basedOn - Plan/proposal/order fulfilled by this request.
# + asNeededCodeableConcept - If a CodeableConcept is present, it indicates the pre-condition for performing the service. For example 'pain', 'on flare-up', etc.
# + requester - The individual who initiated the request and has responsibility for its activation.
# + identifier - Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller.
# + authoredOn - When the request transitioned to being actionable.
# + performer - The desired performer for doing the requested service. For example, the surgeon, dermatopathologist, endoscopist, etc.
# + replaces - The request takes the place of the referenced completed or terminated request(s).
# + encounter - An encounter that provides additional information about the healthcare context in which this request is made.
# + occurrenceTiming - The date/time at which the requested service should occur.
# + quantityRange - An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).
# + instantiatesCanonical - The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.
# + priority - Indicates how quickly the ServiceRequest should be addressed with respect to other requests.
# + intent - Whether the request is a proposal, plan, an original order or a reflex order.
# + performerType - Desired type of performer for doing the requested service.
# + bodySite - Anatomic location where the procedure should be performed. This is the target site.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + occurrencePeriod - The date/time at which the requested service should occur.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + location - The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center.
# + occurrenceDateTime - The date/time at which the requested service should occur.
# + orderDetail - Additional details and instructions about the how the services are to be delivered. For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied.
# + bodyStructure - Anatomic location where the procedure should be performed. This is the target site.
# + category - A code that classifies the service for searching, sorting and display purposes (e.g. 'Surgical Procedure').
# + patientInstruction - Instructions in terms that are understood by the patient or consumer.
# + status - The status of the order.
@r5:ResourceDefinition {
    resourceType: "ServiceRequest",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/ServiceRequest",
    elements: {
        "insurance" : {
            name: "insurance",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.insurance"
        },
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.note"
        },
        "reason" : {
            name: "reason",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.reason",
            valueSet: "http://hl7.org/fhir/ValueSet/procedure-reason"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.extension"
        },
        "code" : {
            name: "code",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.code",
            valueSet: "http://hl7.org/fhir/ValueSet/procedure-code"
        },
        "requisition" : {
            name: "requisition",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.requisition"
        },
        "subject" : {
            name: "subject",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ServiceRequest.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.modifierExtension"
        },
        "focus" : {
            name: "focus",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.focus"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "instantiatesUri" : {
            name: "instantiatesUri",
            dataType: r5:uri,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.instantiatesUri"
        },
        "relevantHistory" : {
            name: "relevantHistory",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.relevantHistory"
        },
        "supportingInfo" : {
            name: "supportingInfo",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.supportingInfo"
        },
        "specimen" : {
            name: "specimen",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.specimen"
        },
        "quantityQuantity" : {
            name: "quantityQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.quantity[x]"
        },
        "quantityRatio" : {
            name: "quantityRatio",
            dataType: r5:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.quantity[x]"
        },
        "asNeededBoolean" : {
            name: "asNeededBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.asNeeded[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-as-needed-reason"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.text"
        },
        "doNotPerform" : {
            name: "doNotPerform",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.doNotPerform"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.basedOn"
        },
        "asNeededCodeableConcept" : {
            name: "asNeededCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.asNeeded[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-as-needed-reason"
        },
        "requester" : {
            name: "requester",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.requester"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.identifier"
        },
        "authoredOn" : {
            name: "authoredOn",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.authoredOn"
        },
        "performer" : {
            name: "performer",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.performer"
        },
        "replaces" : {
            name: "replaces",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.replaces"
        },
        "encounter" : {
            name: "encounter",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.encounter"
        },
        "occurrenceTiming" : {
            name: "occurrenceTiming",
            dataType: r5:Timing,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.occurrence[x]"
        },
        "quantityRange" : {
            name: "quantityRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.quantity[x]"
        },
        "instantiatesCanonical" : {
            name: "instantiatesCanonical",
            dataType: r5:canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.instantiatesCanonical"
        },
        "priority" : {
            name: "priority",
            dataType: ServiceRequestPriority,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/request-priority|5.0.0"
        },
        "intent" : {
            name: "intent",
            dataType: ServiceRequestIntent,
            min: 1,
            max: 1,
            isArray: false,
            path: "ServiceRequest.intent",
            valueSet: "http://hl7.org/fhir/ValueSet/request-intent|5.0.0"
        },
        "performerType" : {
            name: "performerType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.performerType",
            valueSet: "http://hl7.org/fhir/ValueSet/participant-role"
        },
        "bodySite" : {
            name: "bodySite",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.bodySite",
            valueSet: "http://hl7.org/fhir/ValueSet/body-site"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.contained"
        },
        "occurrencePeriod" : {
            name: "occurrencePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.occurrence[x]"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.implicitRules"
        },
        "location" : {
            name: "location",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.location",
            valueSet: "http://terminology.hl7.org/ValueSet/v3-ServiceDeliveryLocationRoleType"
        },
        "occurrenceDateTime" : {
            name: "occurrenceDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.occurrence[x]"
        },
        "orderDetail" : {
            name: "orderDetail",
            dataType: ServiceRequestOrderDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.orderDetail"
        },
        "bodyStructure" : {
            name: "bodyStructure",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.bodyStructure"
        },
        "category" : {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.category",
            valueSet: "http://hl7.org/fhir/ValueSet/servicerequest-category"
        },
        "patientInstruction" : {
            name: "patientInstruction",
            dataType: ServiceRequestPatientInstruction,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.patientInstruction"
        },
        "status" : {
            name: "status",
            dataType: ServiceRequestStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ServiceRequest.status",
            valueSet: "http://hl7.org/fhir/ValueSet/request-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type ServiceRequest record {|
    *r5:DomainResource;

    RESOURCE_NAME_SERVICEREQUEST resourceType = RESOURCE_NAME_SERVICEREQUEST;

    r5:Reference[] insurance?;
    r5:Annotation[] note?;
    r5:CodeableReference[] reason?;
    r5:Extension[] extension?;
    r5:CodeableReference code?;
    r5:Identifier requisition?;
    r5:Reference subject;
    r5:Extension[] modifierExtension?;
    r5:Reference[] focus?;
    r5:code language?;
    r5:uri[] instantiatesUri?;
    r5:Reference[] relevantHistory?;
    r5:CodeableReference[] supportingInfo?;
    r5:Reference[] specimen?;
    r5:Quantity quantityQuantity?;
    r5:Ratio quantityRatio?;
    boolean asNeededBoolean?;
    string id?;
    r5:Narrative text?;
    boolean doNotPerform?;
    r5:Reference[] basedOn?;
    r5:CodeableConcept asNeededCodeableConcept?;
    r5:Reference requester?;
    r5:Identifier[] identifier?;
    r5:dateTime authoredOn?;
    r5:Reference[] performer?;
    r5:Reference[] replaces?;
    r5:Reference encounter?;
    r5:Timing occurrenceTiming?;
    r5:Range quantityRange?;
    r5:canonical[] instantiatesCanonical?;
    ServiceRequestPriority priority?;
    ServiceRequestIntent intent;
    r5:CodeableConcept performerType?;
    r5:CodeableConcept[] bodySite?;
    r5:Resource[] contained?;
    r5:Period occurrencePeriod?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    r5:CodeableReference[] location?;
    r5:dateTime occurrenceDateTime?;
    ServiceRequestOrderDetail[] orderDetail?;
    r5:Reference bodyStructure?;
    r5:CodeableConcept[] category?;
    ServiceRequestPatientInstruction[] patientInstruction?;
    ServiceRequestStatus status;
    r5:Element ...;
|};

# ServiceRequestPriority enum
public enum ServiceRequestPriority {
   CODE_PRIORITY_STAT = "stat",
   CODE_PRIORITY_ROUTINE = "routine",
   CODE_PRIORITY_URGENT = "urgent",
   CODE_PRIORITY_ASAP = "asap"
}

# ServiceRequestIntent enum
public enum ServiceRequestIntent {
   CODE_INTENT_PROPOSAL = "proposal",
   CODE_INTENT_PLAN = "plan",
   CODE_INTENT_DIRECTIVE = "directive",
   CODE_INTENT_ORDER = "order"
}

# FHIR ServiceRequestOrderDetail datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + parameterFocus - Indicates the context of the order details by reference.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + 'parameter - The parameter details for the service being requested.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ServiceRequestOrderDetail",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.orderDetail.extension"
        },
        "parameterFocus": {
            name: "parameterFocus",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates the context of the order details by reference.",
            path: "ServiceRequest.orderDetail.parameterFocus"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ServiceRequest.orderDetail.modifierExtension"
        },
        "parameter": {
            name: "parameter",
            dataType: ServiceRequestOrderDetailParameter,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The parameter details for the service being requested.",
            path: "ServiceRequest.orderDetail.parameter"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.orderDetail.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ServiceRequestOrderDetail record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableReference parameterFocus?;
    r5:Extension[] modifierExtension?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.orderDetail.parameter constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.orderDetail.parameter constraint. This field must be an array containing at most one item."
        }
    }
    ServiceRequestOrderDetailParameter[] 'parameter;
    string id?;
|};

# FHIR ServiceRequestPatientInstruction datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + instructionReference - Instructions in terms that are understood by the patient or consumer.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + instructionMarkdown - Instructions in terms that are understood by the patient or consumer.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ServiceRequestPatientInstruction",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.patientInstruction.extension"
        },
        "instructionReference": {
            name: "instructionReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Instructions in terms that are understood by the patient or consumer.",
            path: "ServiceRequest.patientInstruction.instruction[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ServiceRequest.patientInstruction.modifierExtension"
        },
        "instructionMarkdown": {
            name: "instructionMarkdown",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Instructions in terms that are understood by the patient or consumer.",
            path: "ServiceRequest.patientInstruction.instruction[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.patientInstruction.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ServiceRequestPatientInstruction record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Reference instructionReference?;
    r5:Extension[] modifierExtension?;
    r5:markdown instructionMarkdown?;
    string id?;
|};

# ServiceRequestStatus enum
public enum ServiceRequestStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_COMPLETED = "completed",
   CODE_STATUS_REVOKED = "revoked",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_ON_HOLD = "on-hold",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR ServiceRequestOrderDetailParameter datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A value representing the additional detail or instructions for the order (e.g., catheter insertion, body elevation, descriptive device configuration and/or setting instructions).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueServiceRequestCodeableConcept - Indicates a value for the order detail.
# + valueServiceRequestRange - Indicates a value for the order detail.
# + valueServiceRequestPeriod - Indicates a value for the order detail.
# + valueServiceRequestQuantity - Indicates a value for the order detail.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + valueServiceRequestRatio - Indicates a value for the order detail.
# + valueServiceRequestString - Indicates a value for the order detail.
# + valueServiceRequestBoolean - Indicates a value for the order detail.
@r5:DataTypeDefinition {
    name: "ServiceRequestOrderDetailParameter",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.orderDetail.parameter.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A value representing the additional detail or instructions for the order (e.g., catheter insertion, body elevation, descriptive device configuration and/or setting instructions).",
            path: "ServiceRequest.orderDetail.parameter.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ServiceRequest.orderDetail.parameter.modifierExtension"
        },
        "valueServiceRequestCodeableConcept": {
            name: "valueServiceRequestCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates a value for the order detail.",
            path: "ServiceRequest.orderDetail.parameter.value[x]"
        },
        "valueServiceRequestRange": {
            name: "valueServiceRequestRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates a value for the order detail.",
            path: "ServiceRequest.orderDetail.parameter.value[x]"
        },
        "valueServiceRequestPeriod": {
            name: "valueServiceRequestPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates a value for the order detail.",
            path: "ServiceRequest.orderDetail.parameter.value[x]"
        },
        "valueServiceRequestQuantity": {
            name: "valueServiceRequestQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates a value for the order detail.",
            path: "ServiceRequest.orderDetail.parameter.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.orderDetail.parameter.id"
        },
        "valueServiceRequestRatio": {
            name: "valueServiceRequestRatio",
            dataType: r5:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates a value for the order detail.",
            path: "ServiceRequest.orderDetail.parameter.value[x]"
        },
        "valueServiceRequestString": {
            name: "valueServiceRequestString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates a value for the order detail.",
            path: "ServiceRequest.orderDetail.parameter.value[x]"
        },
        "valueServiceRequestBoolean": {
            name: "valueServiceRequestBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates a value for the order detail.",
            path: "ServiceRequest.orderDetail.parameter.value[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ServiceRequestOrderDetailParameter record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept code;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept valueServiceRequestCodeableConcept;
    r5:Range valueServiceRequestRange;
    r5:Period valueServiceRequestPeriod;
    r5:Quantity valueServiceRequestQuantity;
    string id?;
    r5:Ratio valueServiceRequestRatio;
    string valueServiceRequestString;
    boolean valueServiceRequestBoolean;
|};

