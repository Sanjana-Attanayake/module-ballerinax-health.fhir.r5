// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_DEVICE = "http://hl7.org/fhir/StructureDefinition/Device";
public const RESOURCE_NAME_DEVICE = "Device";

# FHIR Device resource record.
#
# + resourceType - The type of the resource describes
# + note - Descriptive information, usage information or implantation information that is not captured in an existing element.
# + parent - The higher level or encompassing device that this device is a logical part of.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + biologicalSourceEvent - An identifier that supports traceability to the event during which material in this product from one or more biological entities was obtained or pooled.
# + displayName - The name used to display by default when the device is referenced. Based on intent of use by the resource creator, this may reflect one of the names in Device.name, or may be another simple name.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + 'type - The kind or type of device. A device instance may have more than one type - in which case those are the types that apply to the specific instance of the device.
# + cycle - The series of occurrences that repeats during the operation of the device.
# + manufacturer - A name of the manufacturer or entity legally responsible for the device.
# + duration - A measurement of time during the device's operation (e.g., days, hours, mins, etc.).
# + mode - The designated condition for performing a task with the device.
# + endpoint - Technical endpoints providing access to services provided by the device defined at this resource.
# + safety - Provides additional safety characteristics about a medical device. For example devices containing latex.
# + contact - Contact details for an organization or a particular human that is responsible for the device.
# + property - Static or essentially fixed characteristics or features of the device (e.g., time or timing attributes, resolution, accuracy, intended use or instructions for use, and physical attributes) that are not otherwise captured in more specific attributes.
# + manufactureDate - The date and time when the device was manufactured.
# + definition - The reference to the definition for the device.
# + availabilityStatus - The availability of the device.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + expirationDate - The date and time beyond which this device is no longer valid or should not be used (if applicable).
# + owner - An organization that is responsible for the provision and ongoing maintenance of the device.
# + identifier - Unique instance identifiers assigned to a device by manufacturers other organizations or owners.
# + serialNumber - The serial number assigned by the organization when the device was manufactured.
# + lotNumber - Lot number assigned by the manufacturer.
# + 'version - The actual design of the device or software version running on the device.
# + url - A network address on which the device may be contacted directly.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + udiCarrier - Unique device identifier (UDI) assigned to device label or package. Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + name - This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device. This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + location - The place where the device can be found.
# + modelNumber - The manufacturer's model number for the device.
# + partNumber - The part number or catalog number of the device.
# + conformsTo - Identifies the standards, specifications, or formal guidances for the capabilities supported by the device. The device may be certified as conformant to these specifications e.g., communication, performance, process, measurement, or specialization standards.
# + category - Devices may be associated with one or more categories.
# + gateway - The linked device acting as a communication controller, data collector, translator, or concentrator for the current device (e.g., mobile phone application that relays a blood pressure device's data).
# + status - The Device record status. This is not the status of the device like availability.
@r5:ResourceDefinition {
    resourceType: "Device",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/Device",
    elements: {
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.note"
        },
        "parent" : {
            name: "parent",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.parent"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.extension"
        },
        "biologicalSourceEvent" : {
            name: "biologicalSourceEvent",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.biologicalSourceEvent"
        },
        "displayName" : {
            name: "displayName",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.displayName"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "type" : {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.type",
            valueSet: "http://hl7.org/fhir/ValueSet/device-type"
        },
        "cycle" : {
            name: "cycle",
            dataType: r5:Count,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.cycle"
        },
        "manufacturer" : {
            name: "manufacturer",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.manufacturer"
        },
        "duration" : {
            name: "duration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.duration"
        },
        "mode" : {
            name: "mode",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.mode",
            valueSet: "http://hl7.org/fhir/ValueSet/device-operation-mode"
        },
        "endpoint" : {
            name: "endpoint",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.endpoint"
        },
        "safety" : {
            name: "safety",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.safety",
            valueSet: "http://hl7.org/fhir/ValueSet/device-safety"
        },
        "contact" : {
            name: "contact",
            dataType: r5:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.contact"
        },
        "property" : {
            name: "property",
            dataType: DeviceProperty,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.property"
        },
        "manufactureDate" : {
            name: "manufactureDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.manufactureDate"
        },
        "definition" : {
            name: "definition",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.definition"
        },
        "availabilityStatus" : {
            name: "availabilityStatus",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.availabilityStatus",
            valueSet: "http://hl7.org/fhir/ValueSet/device-availability-status"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.text"
        },
        "expirationDate" : {
            name: "expirationDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.expirationDate"
        },
        "owner" : {
            name: "owner",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.owner"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.identifier"
        },
        "serialNumber" : {
            name: "serialNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.serialNumber"
        },
        "lotNumber" : {
            name: "lotNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.lotNumber"
        },
        "version" : {
            name: "version",
            dataType: DeviceVersion,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.version"
        },
        "url" : {
            name: "url",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.url"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.contained"
        },
        "udiCarrier" : {
            name: "udiCarrier",
            dataType: DeviceUdiCarrier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.udiCarrier"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.meta"
        },
        "name" : {
            name: "name",
            dataType: DeviceName,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.implicitRules"
        },
        "location" : {
            name: "location",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.location"
        },
        "modelNumber" : {
            name: "modelNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.modelNumber"
        },
        "partNumber" : {
            name: "partNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.partNumber"
        },
        "conformsTo" : {
            name: "conformsTo",
            dataType: DeviceConformsTo,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.conformsTo"
        },
        "category" : {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.category",
            valueSet: "http://hl7.org/fhir/ValueSet/device-category"
        },
        "gateway" : {
            name: "gateway",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.gateway"
        },
        "status" : {
            name: "status",
            dataType: DeviceStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.status",
            valueSet: "http://hl7.org/fhir/ValueSet/device-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type Device record {|
    *r5:DomainResource;

    RESOURCE_NAME_DEVICE resourceType = RESOURCE_NAME_DEVICE;

    r5:Annotation[] note?;
    r5:Reference parent?;
    r5:Extension[] extension?;
    r5:Identifier biologicalSourceEvent?;
    string displayName?;
    r5:Extension[] modifierExtension?;
    r5:code language?;
    r5:CodeableConcept[] 'type?;
    r5:Count cycle?;
    string manufacturer?;
    r5:Duration duration?;
    r5:CodeableConcept mode?;
    r5:Reference[] endpoint?;
    r5:CodeableConcept[] safety?;
    r5:ContactPoint[] contact?;
    DeviceProperty[] property?;
    r5:dateTime manufactureDate?;
    r5:CodeableReference definition?;
    r5:CodeableConcept availabilityStatus?;
    string id?;
    r5:Narrative text?;
    r5:dateTime expirationDate?;
    r5:Reference owner?;
    r5:Identifier[] identifier?;
    string serialNumber?;
    string lotNumber?;
    DeviceVersion[] 'version?;
    r5:uri url?;
    r5:Resource[] contained?;
    DeviceUdiCarrier[] udiCarrier?;
    r5:Meta meta?;
    DeviceName[] name?;
    r5:uri implicitRules?;
    r5:Reference location?;
    string modelNumber?;
    string partNumber?;
    DeviceConformsTo[] conformsTo?;
    r5:CodeableConcept[] category?;
    r5:CodeableReference[] gateway?;
    DeviceStatus status?;
    r5:Element ...;
|};

# FHIR DeviceProperty datatype record.
#
# + valueCodeableConcept - The value of the property specified by the associated property.type code.
# + valueBoolean - The value of the property specified by the associated property.type code.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueAttachment - The value of the property specified by the associated property.type code.
# + valueString - The value of the property specified by the associated property.type code.
# + valueRange - The value of the property specified by the associated property.type code.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Code that specifies the property, such as resolution, color, size, being represented.
# + valueInteger - The value of the property specified by the associated property.type code.
# + valueQuantity - The value of the property specified by the associated property.type code.
@r5:DataTypeDefinition {
    name: "DeviceProperty",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the property specified by the associated property.type code.",
            path: "Device.property.value[x]"
        },
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the property specified by the associated property.type code.",
            path: "Device.property.value[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.extension"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r5:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the property specified by the associated property.type code.",
            path: "Device.property.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the property specified by the associated property.type code.",
            path: "Device.property.value[x]"
        },
        "valueRange": {
            name: "valueRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the property specified by the associated property.type code.",
            path: "Device.property.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.property.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code that specifies the property, such as resolution, color, size, being represented.",
            path: "Device.property.type"
        },
        "valueInteger": {
            name: "valueInteger",
            dataType: r5:integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the property specified by the associated property.type code.",
            path: "Device.property.value[x]"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the property specified by the associated property.type code.",
            path: "Device.property.value[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type DeviceProperty record {|
    *r5:BackboneElement;

    r5:CodeableConcept valueCodeableConcept;
    boolean valueBoolean;
    r5:Extension[] extension?;
    r5:Attachment valueAttachment;
    string valueString;
    r5:Range valueRange;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type;
    r5:integer valueInteger;
    r5:Quantity valueQuantity;
|};

# DeviceUdiCarrierEntryType enum
public enum DeviceUdiCarrierEntryType {
   CODE_ENTRYTYPE_SELF_REPORTED = "self-reported",
   CODE_ENTRYTYPE_ELECTRONIC_TRANSMISSION = "electronic-transmission",
   CODE_ENTRYTYPE_RFID = "rfid",
   CODE_ENTRYTYPE_MANUAL = "manual",
   CODE_ENTRYTYPE_BARCODE = "barcode",
   CODE_ENTRYTYPE_CARD = "card",
   CODE_ENTRYTYPE_UNKNOWN = "unknown"
}

# FHIR DeviceConformsTo datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + specification - Code that identifies the specific standard, specification, protocol, formal guidance, regulation, legislation, or certification scheme to which the device adheres.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - Describes the type of the standard, specification, or formal guidance.
# + 'version - Identifies the specific form or variant of the standard, specification, or formal guidance. This may be a 'version number', release, document edition, publication year, or other label.
@r5:DataTypeDefinition {
    name: "DeviceConformsTo",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.conformsTo.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.conformsTo.modifierExtension"
        },
        "specification": {
            name: "specification",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code that identifies the specific standard, specification, protocol, formal guidance, regulation, legislation, or certification scheme to which the device adheres.",
            path: "Device.conformsTo.specification"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.conformsTo.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Describes the type of the standard, specification, or formal guidance.",
            path: "Device.conformsTo.category"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the specific form or variant of the standard, specification, or formal guidance. This may be a 'version number', release, document edition, publication year, or other label.",
            path: "Device.conformsTo.version"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type DeviceConformsTo record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept specification;
    string id?;
    r5:CodeableConcept category?;
    string 'version?;
|};

# FHIR DeviceUdiCarrier datatype record.
#
# + entryType - A coded entry to indicate how the data was entered.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + deviceIdentifier - The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.
# + carrierHRF - The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.
# + jurisdiction - The identity of the authoritative source for UDI generation within a jurisdiction. All UDIs are globally unique within a single namespace with the appropriate repository uri as the system. For example, UDIs of devices managed in the U.S. by the FDA, the value is http://hl7.org/fhir/NamingSystem/us-fda-udi or in the European Union by the European Commission http://hl7.org/fhir/NamingSystem/eu-ec-udi.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + carrierAIDC - The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID. Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.
# + issuer - Organization that is charged with issuing UDIs for devices. For example, the US FDA issuers include: 1) GS1: http://hl7.org/fhir/NamingSystem/gs1-di, 2) HIBCC: http://hl7.org/fhir/NamingSystem/hibcc-diI, 3) ICCBBA for blood containers: http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 4) ICCBA for other devices: http://hl7.org/fhir/NamingSystem/iccbba-other-di # Informationsstelle für Arzneispezialitäten (IFA GmbH) (EU only): http://hl7.org/fhir/NamingSystem/ifa-gmbh-di.
@r5:DataTypeDefinition {
    name: "DeviceUdiCarrier",
    baseType: (),
    elements: {
        "entryType": {
            name: "entryType",
            dataType: DeviceUdiCarrierEntryType,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded entry to indicate how the data was entered.",
            path: "Device.udiCarrier.entryType"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.udiCarrier.extension"
        },
        "deviceIdentifier": {
            name: "deviceIdentifier",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.",
            path: "Device.udiCarrier.deviceIdentifier"
        },
        "carrierHRF": {
            name: "carrierHRF",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.",
            path: "Device.udiCarrier.carrierHRF"
        },
        "jurisdiction": {
            name: "jurisdiction",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The identity of the authoritative source for UDI generation within a jurisdiction. All UDIs are globally unique within a single namespace with the appropriate repository uri as the system. For example, UDIs of devices managed in the U.S. by the FDA, the value is http://hl7.org/fhir/NamingSystem/us-fda-udi or in the European Union by the European Commission http://hl7.org/fhir/NamingSystem/eu-ec-udi.",
            path: "Device.udiCarrier.jurisdiction"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.udiCarrier.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.udiCarrier.id"
        },
        "carrierAIDC": {
            name: "carrierAIDC",
            dataType: r5:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID. Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.",
            path: "Device.udiCarrier.carrierAIDC"
        },
        "issuer": {
            name: "issuer",
            dataType: r5:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that is charged with issuing UDIs for devices. For example, the US FDA issuers include: 1) GS1: http://hl7.org/fhir/NamingSystem/gs1-di, 2) HIBCC: http://hl7.org/fhir/NamingSystem/hibcc-diI, 3) ICCBBA for blood containers: http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 4) ICCBA for other devices: http://hl7.org/fhir/NamingSystem/iccbba-other-di # Informationsstelle für Arzneispezialitäten (IFA GmbH) (EU only): http://hl7.org/fhir/NamingSystem/ifa-gmbh-di.",
            path: "Device.udiCarrier.issuer"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type DeviceUdiCarrier record {|
    *r5:BackboneElement;

    DeviceUdiCarrierEntryType entryType?;
    r5:Extension[] extension?;
    string deviceIdentifier;
    string carrierHRF?;
    r5:uri jurisdiction?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:base64Binary carrierAIDC?;
    r5:uri issuer;
|};

# DeviceStatus enum
public enum DeviceStatus {
   CODE_STATUS_INACTIVE = "inactive",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR DeviceVersion datatype record.
#
# + component - The hardware or software module of the device to which the version applies.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + installDate - The date the version was installed on the device.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of the device version, e.g. manufacturer, approved, internal.
# + value - The version text.
@r5:DataTypeDefinition {
    name: "DeviceVersion",
    baseType: (),
    elements: {
        "component": {
            name: "component",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "The hardware or software module of the device to which the version applies.",
            path: "Device.version.component"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.version.extension"
        },
        "installDate": {
            name: "installDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date the version was installed on the device.",
            path: "Device.version.installDate"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.version.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.version.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of the device version, e.g. manufacturer, approved, internal.",
            path: "Device.version.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The version text.",
            path: "Device.version.value"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type DeviceVersion record {|
    *r5:BackboneElement;

    r5:Identifier component?;
    r5:Extension[] extension?;
    r5:dateTime installDate?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type?;
    string value;
|};

# DeviceNameType enum
public enum DeviceNameType {
   CODE_TYPE_REGISTERED_NAME = "registered-name",
   CODE_TYPE_USER_FRIENDLY_NAME = "user-friendly-name",
   CODE_TYPE_PATIENT_REPORTED_NAME = "patient-reported-name"
}

# FHIR DeviceName datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + display - Indicates the default or preferred name to be displayed.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Indicates the kind of name. RegisteredName | UserFriendlyName | PatientReportedName.
# + value - The actual name that identifies the device.
@r5:DataTypeDefinition {
    name: "DeviceName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.name.extension"
        },
        "display": {
            name: "display",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates the default or preferred name to be displayed.",
            path: "Device.name.display"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.name.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.name.id"
        },
        "type": {
            name: "type",
            dataType: DeviceNameType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Indicates the kind of name. RegisteredName | UserFriendlyName | PatientReportedName.",
            path: "Device.name.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual name that identifies the device.",
            path: "Device.name.value"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type DeviceName record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    boolean display?;
    r5:Extension[] modifierExtension?;
    string id?;
    DeviceNameType 'type;
    string value;
|};

